name: Puzzle League N64 (European (basic spec.))
sha1: 184f0cac8fdfad47590c515fc637076d2ded58d7
options:
  basename: puzzleleaguen64
  target_path: baserom.eur.z64
  ld_script_path: linker_scripts/eur/puzzleleague.ld
  base_path: .
  compiler: GCC
  find_file_boundaries: True
  header_encoding: ASCII
  platform: n64
  undefined_funcs_auto_path: linker_scripts/eur/auto/undefined_funcs_auto.ld
  undefined_syms_auto_path: linker_scripts/eur/auto/undefined_syms_auto.ld
  symbol_addrs_path:
    - linker_scripts/eur/symbol_addrs_main.txt
    - linker_scripts/eur/symbol_addrs_libultra.txt
    - linker_scripts/eur/symbol_addrs_libkmc.txt
    - linker_scripts/eur/ignored_addresses.txt
  reloc_addrs_path:
    - relocs/reloc_addrs.eur.txt
  asm_path: asm/eur
  src_path: src
  build_path: build
  asset_path: bin/eur
  extensions_path: tools/splat_ext
  mips_abi_float_regs: o32
  do_c_func_detection: True
  o_as_suffix: True
  # gfx_ucode: f3dex2
  mnemonic_ljust: 12
  rom_address_padding: True
  dump_symbols: True
  # generated_c_preamble: |
  # asm_inc_header: ""
  use_legacy_include_asm: False
  create_asm_dependencies: True
  # string_encoding: SHIFT-JIS
  asm_function_macro: glabel
  asm_jtbl_label_macro: jlabel
  asm_data_macro: dlabel
  # include_macro_inc: False
  libultra_symbols: True
  hardware_regs: True
  auto_all_sections: []
segments:
  - name: header
    type: header
    start: 0x0

  - name: boot
    type: bin
    start: 0x40

  - name: entry
    type: code
    start: 0x1000
    vram: 0x80000400
    subsegments:
      - [0x1000, hasm, entry/entry]

  - name: main
    type: code
    start: 0x1050
    vram: 0x80000450
    follows_vram: entry
    bss_size: 0x1364C0
    subalign: null
    subsegments:
      - [0x001050, asm, main/001050]
      - [0x001FD0, asm, main/001FD0]
      - [0x0027D0, asm, main/0027D0]
      - [0x004B50, asm, main/004B50]
      - [0x0068C0, asm, main/0068C0]
      - [0x007F60, asm, main/007F60]
      - [0x01D5F0, asm, main/01D5F0]
      - [0x01E050, asm, main/01E050]
      - [0x01F9F0, asm, main/01F9F0]
      - [0x02E920, asm, main/02E920]
      - [0x02FF20, asm, main/02FF20]
      - [0x031B50, asm, main/031B50]
      - [0x034FD0, asm, main/034FD0]
      - [0x036750, asm, main/036750]
      - [0x037EA0, asm, main/037EA0]
      - [0x03F160, asm, main/03F160]
      - [0x0419D0, asm, main/0419D0]
      - [0x043230, asm, main/043230]
      - [0x043F40, asm, main/043F40]
      - [0x0450B0, asm, main/0450B0]
      - [0x047CD0, asm, main/047CD0]
      - [0x04C1A0, asm, main/04C1A0]
      - [0x04F2F0, asm, main/04F2F0]
      - [0x0535C0, asm, main/0535C0]
      - [0x054EC0, asm, main/054EC0]
      - [0x0566C0, asm, main/0566C0]
      - [0x0577B0, asm, main/0577B0]
      - [0x05B790, asm, main/05B790]
      - [0x05E500, asm, main/05E500]
      - [0x05E7D0, asm, main/05E7D0]
      - [0x05F3E0, asm, main/05F3E0]
      - [0x067640, asm, main/067640]
      - [0x068280, asm, main/068280]
      - [0x06B520, asm, main/06B520]
      - [0x06BE00, asm, main/06BE00]
      - [0x06DD70, asm, main/06DD70]
      - [0x070AF0, asm, main/070AF0]
      - [0x071E70, asm, main/071E70]
      - [0x0725F0, asm, main/0725F0]
      - [0x073DC0, asm, main/073DC0]
      - [0x0745B0, asm, main/0745B0]
      - [0x074A60, asm, main/074A60]
      - [0x074B50, asm, main/074B50]
      - [0x074C40, asm, main/074C40]
      - [0x074D30, asm, main/074D30]
      - [0x074E20, asm, main/074E20]
      - [0x074F10, asm, main/074F10]
      - [0x075000, asm, main/075000]
      - [0x0750F0, asm, main/0750F0]
      - [0x0751E0, asm, main/0751E0]
      - [0x0752D0, asm, main/0752D0]
      - [0x0753C0, asm, main/0753C0]
      - [0x0754B0, asm, main/0754B0]
      - [0x0755A0, asm, main/0755A0]
      - [0x075690, asm, main/075690]
      - [0x075780, asm, main/075780]
      - [0x075870, asm, main/075870]
      - [0x075960, asm, main/075960]
      - [0x075F20, asm, main/075F20]
      - [0x0898F0, asm, main/0898F0]
      - [0x08A670, asm, main/08A670]
      - [0x08BE00, asm, main/08BE00]
      - [0x08FF90, asm, main/08FF90]
      - [0x090CD0, asm, main/090CD0]
      - [0x090D90, asm, main/090D90]
      - [0x090F80, asm, main/090F80]
      - [0x091270, asm, main/091270]
      - [0x0913C0, asm, main/0913C0]

      # Uses libgultra_d
      - [0x0920F0, hasm, libultra/setintmask]
      - [0x092190, asm, libultra/pimgr] # c
      - [0x0924D0, asm, libultra/epirawdma] # c
      - [0x0928B0, asm, libultra/epiwrite] # c
      - [0x092940, asm, libultra/epiread] # c
      - [0x0929D0, asm, libultra/epidma] # c
      - [0x092C10, asm, libultra/epilinkhandle] # c
      - [0x092C70, asm, libultra/cartrominit] # c
      - [0x092E60, asm, libultra/devmgr] # c
      - [0x0933A0, asm, libultra/0933A0]
      - [0x093490, asm, libultra/pidma] # c
      - [0x0936D0, asm, libultra/aigetlen] # c
      - [0x093700, asm, libultra/aigetstat] # c
      - [0x093730, asm, libultra/aisetfreq] # c
      - [0x0939E0, asm, libultra/aisetnextbuf] # c
      - [0x093AF0, asm, libultra/drvrnew] # c
      - [0x094640, asm, libultra/load] # c
      - [0x0959C0, asm, libultra/auxbus] # c
      - [0x095B90, asm, libultra/env] # c
      - [0x097030, asm, libultra/filter] # c
      - [0x0970A0, asm, libultra/mainbus] # c
      - [0x097300, asm, libultra/resample] # c
      - [0x097770, asm, libultra/reverb] # c
      - [0x098B20, asm, libultra/save] # c
      - [0x098D20, asm, libultra/sl] # c
      - [0x098EA0, asm, libultra/heapinit] # c
      - [0x098F40, asm, libultra/heapalloc] # c
      - [0x0990B0, asm, libultra/copy] # common form # c
      - [0x099140, asm, libultra/synthesizer] # c
      - [0x099B00, asm, libultra/syndelete] # c
      - [0x099B30, asm, libultra/synaddplayer] # c
      - [0x099BA0, asm, libultra/synremoveplayer] # c
      - [0x099C80, asm, libultra/synfreevoice] # c
      - [0x099D80, asm, libultra/synallocvoice] # c
      - [0x09A100, asm, libultra/synstopvoice] # c
      - [0x09A1D0, asm, libultra/synstartvoice] # c
      - [0x09A2C0, asm, libultra/synsetpitch] # c
      - [0x09A3A0, asm, libultra/synsetvol] # c
      - [0x09A4A0, asm, libultra/synsetfxmix] # c
      - [0x09A5A0, asm, libultra/synsetpan] # c
      - [0x09A680, asm, libultra/synallocfx] # c
      - [0x09A7E0, hasm, libultra/invaldcache]
      - [0x09A890, hasm, libultra/writebackdcache]
      - [0x09A910, hasm, libultra/writebackdcacheall]
      - [0x09A940, asm, libultra/contquery] # c
      - [0x09AA10, asm, libultra/contreaddata] # c
      - [0x09ACE0, asm, libultra/contreset] # c
      - [0x09AE70, asm, libultra/controller] # c
      - [0x09B2A0, asm, libultra/contsetch] # c
      - [0x09B320, asm, libultra/virtualtophysical] # c
      - [0x09B400, asm, libultra/assert] # c
      - [0x09B450, asm, libultra/lookat] # c
      - [0x09B8F0, asm, libultra/mtxutil] # c
      - [0x09BD10, asm, libultra/perspective] # c
      - [0x09C040, asm, libultra/rotate] # c
      - [0x09C2F0, asm, libultra/sinf] # c
      - [0x09C5A0, asm, libultra/translate] # c
      - [0x09C660, asm, libultra/us2dex] # c
      - [0x09C880, asm, libultra/us2dex_emu] # c
      - [0x09DD20, asm, libultra/rdbsend] # c
      - [0x09E010, asm, libultra/initrdb] # c
      - [0x09E0C0, hasm, libultra/bcopy]
      - [0x09E3E0, hasm, libultra/bzero]
      - [0x09E480, asm, libultra/string] # c
      - [0x09E600, asm, libultra/sprintf] # c
      - [0x09E6D0, asm, libultra/syncprintf] # c
      - [0x09EB40, asm, libultra/createmesgqueue] # c
      - [0x09EBE0, asm, libultra/jammesg] # c
      - [0x09EDA0, asm, libultra/recvmesg] # c
      - [0x09EF50, asm, libultra/sendmesg] # c
      - [0x09F100, asm, libultra/seteventmesg] # c
      - [0x09F200, hasm, libultra/getcount]
      - [0x09F210, asm, libultra/sptask] # c
      - [0x09F640, asm, libultra/sched] # c
      - [0x0A0820, asm, libultra/sirawdma] # c
      - [0x0A0920, asm, libultra/0A0920]
      - [0x0A0A10, asm, libultra/createthread] # c
      - [0x0A0BE0, asm, libultra/destroythread] # c
      - [0x0A0D00, asm, libultra/getthreadpri] # c
      - [0x0A0D50, asm, libultra/setthreadpri] # c
      - [0x0A0EA0, asm, libultra/startthread] # c
      - [0x0A1040, asm, libultra/stopthread] # c
      - [0x0A1130, asm, libultra/thread] # c
      - [0x0A1190, asm, libultra/yieldthread] # c
      - [0x0A11F0, asm, libultra/gettime] # c
      - [0x0A12D0, asm, libultra/settimer] # c
      - [0x0A13D0, asm, libultra/timerintr] # c
      - [0x0A19D0, hasm, libultra/probetlb]
      - [0x0A1A90, asm, libultra/vigetcurrframebuf] # c
      - [0x0A1B10, asm, libultra/vigetnextframebuf] # c
      - [0x0A1B90, asm, libultra/vigetline] # c
      - [0x0A1BC0, asm, libultra/vimgr] # c
      - [0x0A1FE0, asm, libultra/visetevent] # c
      - [0x0A20B0, asm, libultra/visetmode] # c
      - [0x0A2180, asm, libultra/visetspecial] # c
      - [0x0A2410, asm, libultra/visetyscale] # c
      - [0x0A2550, asm, libultra/viswapbuf] # c
      - [0x0A2630, asm, libultra/viswapcontext] # c
      - [0x0A29A0, asm, libultra/viblack] # c
      - [0x0A2A40, asm, libultra/0A2A40]
      - [0x0A2AA0, asm, libultra/afterprenmi] # c
      - [0x0A2AE0, asm, libultra/initialize] # c
      - [0x0A3090, asm, libultra/errorasm] # c
      - [0x0A30E0, asm, libultra/error] # c
      - [0x0A3170, asm, libultra/kmcprintf] # c
      - [0x0A35B0, hasm, libultra/exceptasm]
      - [0x0A43A0, hasm, libultra/interrupt]
      - [0x0A4430, asm, libultra/setglobalintmask] # c
      - [0x0A4490, asm, libultra/resetglobalintmask] # c
      - [0x0A4500, asm, libultra/pirawdma] # c
      - [0x0A46E0, asm, libultra/pigetcmdq] # c
      - [0x0A4730, asm, libultra/epirawread] # c
      - [0x0A4A10, asm, libultra/epirawwrite] # c
      - [0x0A4CC0, asm, libultra/ai] # c
      - [0x0A4D10, hasm, libultra/invalicache]
      - [0x0A4D90, asm, libultra/kdebugserver] # c
      - [0x0A5160, hasm, libultra/sqrtf]
      - [0x0A5170, asm, libultra/cosf] # c
      - [0x0A53B0, asm, libultra/normalize] # c
      - [0x0A5490, asm, libultra/readhost] # c
      - [0x0A5570, asm, libultra/xprintf] # c
      - [0x0A6770, asm, libultra/log] # c
      - [0x0A6C80, asm, libultra/dpsetnextbuf] # c
      - [0x0A6DB0, hasm, libultra/getcause]
      - [0x0A6DC0, hasm, libultra/getsr]
      - [0x0A6DD0, hasm, libultra/setcompare]
      - [0x0A6DE0, hasm, libultra/setfpccsr]
      - [0x0A6DF0, hasm, libultra/setsr]
      - [0x0A6E00, asm, libultra/rmonsio] # c
      - [0x0A7050, asm, libultra/sp] # c
      - [0x0A70A0, asm, libultra/spsetstat] # c
      - [0x0A70D0, asm, libultra/spsetpc] # c
      - [0x0A7120, asm, libultra/sprawdma] # c
      - [0x0A7250, asm, libultra/sptaskyield] # c
      - [0x0A7280, asm, libultra/sptaskyielded] # c
      - [0x0A7310, asm, libultra/sirawread] # c
      - [0x0A73D0, asm, libultra/0A73D0]
      - [0x0A7460, hasm, libultra/maptlbrdb]
      - [0x0A74C0, hasm, libultra/unmaptlball]
      - [0x0A7510, asm, libultra/vi] # c
      - [0x0A7670, asm, libultra/0A7670]
      - [0x0A76A0, asm, libultra/xlitob] # c
      - [0x0A7A50, asm, libultra/xldtob] # c
      - [0x0A8BD0, asm, libultra/dp] # c
      - [0x0A8C20, asm, libultra/rmoncmds] # c
      - [0x0A8D00, asm, libultra/rmonmem] # c
      - [0x0A9770, asm, libultra/rmonmisc] # c
      - [0x0A9940, asm, libultra/rmonregs] # c
      - [0x0AA680, asm, libultra/rmontask] # c
      - [0x0AB220, asm, libultra/rmonmain] # c
      - [0x0AB670, asm, libultra/spgetstat] # c
      - [0x0AB6A0, asm, libultra/sprawread] # c
      - [0x0AB760, asm, libultra/0AB760]
      - [0x0AB7F0, asm, libultra/si] # c
      - [0x0AB840, asm, libultra/0AB840]
      - [0x0AB870, asm, libultra/ldiv] # c
      - [0x0ABAD0, hasm, libultra/rmonrcp]
      - [0x0ABB70, asm, libultra/rmonbrk] # c

      - [0x0AC860, asm, main/0AC860]
      - [0x0B0580, asm, main/0B0580]

      - [0x0B0910, asm, libkmc/0B0910] # __divdi3
      - [0x0B0A80, asm, libkmc/0B0A80] # __udivdi3
      - [0x0B0AA0, asm, libkmc/0B0AA0] # __umoddi3

      - [0x0B0AE0, data, rsp/rspboot]
      - [0x0B0BB0, data, main/0B0BB0] # rsp?

      - [0x0B4BB0, data, main/0B4BB0]

      # rodata start is a  guess
      - [0x0C3530, rodata, main/0C3530]
      - [0x0C3D30, rodata, main/0C3D30]
      - [0x0C4120, rodata, main/0C4120]
      - [0x0C41C0, rodata, main/0C41C0]
      - [0x0C42F0, rodata, main/0C42F0]
      - [0x0C43C0, rodata, main/0C43C0]
      - [0x0C4420, rodata, main/0C4420]
      - [0x0C50E0, rodata, main/0C50E0]
      - [0x0C5120, rodata, main/0C5120]
      - [0x0C5150, rodata, main/0C5150]
      - [0x0C5160, rodata, main/0C5160]
      - [0x0C5170, rodata, main/0C5170]
      - [0x0C5300, rodata, main/0C5300]
      - [0x0C53B0, rodata, main/0C53B0]
      - [0x0C58D0, rodata, main/0C58D0]
      - [0x0C6060, rodata, main/0C6060]
      - [0x0C6070, rodata, main/0C6070]
      - [0x0C6080, rodata, main/0C6080]
      - [0x0C6720, rodata, main/0C6720]
      - [0x0C68E0, rodata, main/0C68E0]
      - [0x0C7820, rodata, main/0C7820]
      - [0x0C7C50, rodata, main/0C7C50]
      - [0x0C7E50, rodata, main/0C7E50]
      - [0x0C84E0, rodata, main/0C84E0]
      - [0x0C85B0, rodata, main/0C85B0]
      - [0x0C86B0, rodata, main/0C86B0]
      - [0x0C8790, rodata, main/0C8790]
      - [0x0C8850, rodata, main/0C8850]
      - [0x0C88A0, rodata, main/0C88A0]
      - [0x0C89A0, rodata, main/0C89A0]
      - [0x0C89D0, rodata, main/0C89D0]
      - [0x0C8A50, rodata, main/0C8A50]
      - [0x0C8A80, rodata, main/0C8A80]
      - [0x0C8AC0, rodata, main/0C8AC0]
      - [0x0C8B40, rodata, main/0C8B40]
      - [0x0C8B70, rodata, main/0C8B70]
      - [0x0C8BC0, rodata, main/0C8BC0]
      - [0x0C8BD0, rodata, main/0C8BD0]
      - [0x0CA3D0, rodata, main/0CA3D0]
      - [0x0CA3F0, rodata, main/0CA3F0]
      - [0x0CA470, rodata, main/0CA470]
      - [0x0CA490, rodata, main/0CA490]
      - [0x0CA690, rodata, main/0CA690]
      - [0x0CA728, rodata, main/build]

      - { start: 0xCA750, type: bss, vram: 0x800C9B50, name: main/800C9B50 }

  - type: bin
    start: 0xCA750
    follows_vram: main

  - [0x1FCFC00]
