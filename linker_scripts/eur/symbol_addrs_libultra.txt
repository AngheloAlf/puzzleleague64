// .text

osSetIntMask = 0x800914F0; // type:func
osCreatePiManager = 0x80091590; // type:func
ramromMain = 0x800917C4; // type:func
__osEPiRawStartDma = 0x800918D0; // type:func
func_80091CB0 = 0x80091CB0; // type:func
func_80091D40 = 0x80091D40; // type:func
osEPiStartDma = 0x80091DD0; // type:func
osEPiLinkHandle = 0x80092010; // type:func
osCartRomInit = 0x80092070; // type:func
__osDevMgrMain = 0x80092260; // type:func
__osPiCreateAccessQueue = 0x800927A0; // type:func
__osPiGetAccess = 0x800927FC; // type:func
__osPiRelAccess = 0x8009284C; // type:func
osPiStartDma = 0x80092890; // type:func
osAiGetLength = 0x80092AD0; // type:func
osAiGetStatus = 0x80092B00; // type:func
osAiSetFrequency = 0x80092B30; // type:func
osAiSetNextBuffer = 0x80092DE0; // type:func
_init_lpfilter = 0x80092EF0; // type:func
alFxNew = 0x8009305C; // type:func
alEnvmixerNew = 0x80093658; // type:func
alLoadNew = 0x80093780; // type:func
alResampleNew = 0x80093854; // type:func
alAuxBusNew = 0x8009390C; // type:func
alMainBusNew = 0x80093978; // type:func
alSaveNew = 0x800939E4; // type:func
alAdpcmPull = 0x80093A40; // type:func
alRaw16Pull = 0x80094184; // type:func
alLoadParam = 0x80094834; // type:func
_decodeChunk = 0x80094BA4; // type:func
alAuxBusPull = 0x80094DC0; // type:func
alAuxBusParam = 0x80094F00; // type:func
alEnvmixerPull = 0x80094F90; // type:func
alEnvmixerParam = 0x8009580C; // type:func
_pullSubFrame = 0x800959C0; // type:func
_frexpf = 0x80095E78; // type:func
_ldexpf = 0x80095FD8; // type:func
_getRate = 0x80096034; // type:func
_getVol = 0x800962EC; // type:func
alFilterNew = 0x80096430; // type:func
alMainBusPull = 0x800964A0; // type:func
alMainBusParam = 0x80096670; // type:func
alResamplePull = 0x80096700; // type:func
alResampleParam = 0x800969DC; // type:func
alFxPull = 0x80096B70; // type:func
alFxParam = 0x80097110; // type:func
alFxParamHdl = 0x80097164; // type:func
_loadOutputBuffer = 0x800974C0; // type:func
_loadBuffer = 0x800977C8; // type:func
_saveBuffer = 0x80097A70; // type:func
_filterBuffer = 0x80097CEC; // type:func
_doModFunc = 0x80097E10; // type:func
alSavePull = 0x80097F20; // type:func
alSaveParam = 0x80098088; // type:func
alInit = 0x80098120; // type:func
alClose = 0x80098178; // type:func
alLink = 0x800981C0; // type:func
alUnlink = 0x8009822C; // type:func
alHeapInit = 0x800982A0; // type:func
alHeapDBAlloc = 0x80098340; // type:func
alCopy = 0x800984B0; // type:func
alSynNew = 0x80098540; // type:func
alAudioFrame = 0x80098984; // type:func
__allocParam = 0x80098BDC; // type:func
__freeParam = 0x80098C48; // type:func
_collectPVoices = 0x80098C90; // type:func
_freePVoice = 0x80098CFC; // type:func
_timeToSamplesNoRound = 0x80098D44; // type:func
_timeToSamples = 0x80098DBC; // type:func
__nextSampleTime = 0x80098E04; // type:func
alSynDelete = 0x80098F00; // type:func
alSynAddPlayer = 0x80098F30; // type:func
alSynRemovePlayer = 0x80098FA0; // type:func
alSynFreeVoice = 0x80099080; // type:func
alSynAllocVoice = 0x80099180; // type:func
_allocatePVoice = 0x800993AC; // type:func
alSynStopVoice = 0x80099500; // type:func
alSynStartVoice = 0x800995D0; // type:func
alSynSetPitch = 0x800996C0; // type:func
alSynSetVol = 0x800997A0; // type:func
alSynSetFXMix = 0x800998A0; // type:func
alSynSetPan = 0x800999A0; // type:func
alSynAllocFX = 0x80099A80; // type:func
osInvalDCache = 0x80099BE0; // type:func
osWritebackDCache = 0x80099C90; // type:func
osWritebackDCacheAll = 0x80099D10; // type:func
osContStartQuery = 0x80099D40; // type:func
osContGetQuery = 0x80099DD4; // type:func
osContStartReadData = 0x80099E10; // type:func
osContGetReadData = 0x80099EAC; // type:func
__osPackReadData = 0x80099FA8; // type:func
osContReset = 0x8009A0E0; // type:func
__osPackResetData = 0x8009A1EC; // type:func
osContInit = 0x8009A270; // type:func
__osContGetInitData = 0x8009A42C; // type:func
__osPackRequestData = 0x8009A554; // type:func
osContSetCh = 0x8009A6A0; // type:func
osVirtualToPhysical = 0x8009A720; // type:func
__assert = 0x8009A800; // type:func
guLookAtF = 0x8009A850; // type:func
guLookAt = 0x8009AC6C; // type:func
guMtxF2L = 0x8009ACF0; // type:func
guMtxL2F = 0x8009AE60; // type:func
guMtxIdentF = 0x8009AFE8; // type:func
guMtxIdent = 0x8009B0D4; // type:func
guPerspectiveF = 0x8009B110; // type:func
guPerspective = 0x8009B3D0; // type:func
guRotateF = 0x8009B440; // type:func
guRotate = 0x8009B68C; // type:func
__sinf = 0x8009B6F0; // type:func
guTranslateF = 0x8009B9A0; // type:func
guTranslate = 0x8009BA0C; // type:func
guS2DInitBg = 0x8009BA60; // type:func
guS2DEmuSetScissor = 0x8009BC80; // type:func
tmemLoad_B = 0x8009BD04; // type:func
tmemLoad_A = 0x8009BE00; // type:func
tmemLoad = 0x8009BEEC; // type:func
guS2DEmuBgRect1Cyc = 0x8009C384; // type:func
__osRdbSend = 0x8009D120; // type:func
osInitRdb = 0x8009D410; // type:func
bcopy = 0x8009D4C0; // type:func
bzero = 0x8009D7E0; // type:func
strchr = 0x8009D880; // type:func
strlen = 0x8009D8FC; // type:func
memcpy = 0x8009D964; // type:func
sprintf = 0x8009DA00; // type:func
proutSprintf = 0x8009DA80; // type:func
proutSyncPrintf = 0x8009DAD0; // type:func
rmonPutchar = 0x8009DB60; // type:func
kmc_proutSyncPrintf = 0x8009DBE8; // type:func
osSyncPrintf = 0x8009DE40; // type:func
rmonPrintf = 0x8009DECC; // type:func
osCreateMesgQueue = 0x8009DF40; // type:func
osJamMesg = 0x8009DFE0; // type:func
osRecvMesg = 0x8009E1A0; // type:func
osSendMesg = 0x8009E350; // type:func
osSetEventMesg = 0x8009E500; // type:func
osGetCount = 0x8009E600; // type:func
_VirtualToPhysicalTask = 0x8009E610; // type:func
osSpTaskLoad = 0x8009E758; // type:func
osSpTaskStartGo = 0x8009E9E4; // type:func
osCreateScheduler = 0x8009EA40; // type:func
osScAddClient = 0x8009EC04; // type:func
osScRemoveClient = 0x8009EC70; // type:func
osScGetCmdQ = 0x8009ED34; // type:func
__scMain = 0x8009ED64; // type:func
__scHandleRetrace = 0x8009EE9C; // type:func
__scHandleRSP = 0x8009F01C; // type:func
__scHandleRDP = 0x8009F220; // type:func
__scTaskReady = 0x8009F36C; // type:func
__scTaskComplete = 0x8009F3E0; // type:func
__scAppendList = 0x8009F540; // type:func
__scExec = 0x8009F674; // type:func
__scYield = 0x8009F824; // type:func
__scSchedule = 0x8009F88C; // type:func
__osSiRawStartDma = 0x8009FC20; // type:func
__osSiCreateAccessQueue = 0x8009FD20; // type:func
__osSiGetAccess = 0x8009FD7C; // type:func
__osSiRelAccess = 0x8009FDCC; // type:func
osCreateThread = 0x8009FE10; // type:func
osDestroyThread = 0x8009FFE0; // type:func
osGetThreadPri = 0x800A0100; // type:func
osSetThreadPri = 0x800A0150; // type:func
osStartThread = 0x800A02A0; // type:func
osStopThread = 0x800A0440; // type:func
__osDequeueThread = 0x800A0530; // type:func
osYieldThread = 0x800A0590; // type:func
osGetTime = 0x800A05F0; // type:func
osSetTimer = 0x800A06D0; // type:func
__osTimerServicesInit = 0x800A07D0; // type:func
__osTimerInterrupt = 0x800A087C; // type:func
__osSetTimerIntr = 0x800A0BA4; // type:func
__osInsertTimer = 0x800A0C24; // type:func
__osProbeTLB = 0x800A0DD0; // type:func
osViGetCurrentFramebuffer = 0x800A0E90; // type:func
osViGetNextFramebuffer = 0x800A0F10; // type:func
osViGetCurrentLine = 0x800A0F90; // type:func
osCreateViManager = 0x800A0FC0; // type:func
viMgrMain = 0x800A11D4; // type:func
osViSetEvent = 0x800A13E0; // type:func
osViSetMode = 0x800A14B0; // type:func
osViSetSpecialFeatures = 0x800A1580; // type:func
osViSetYScale = 0x800A1810; // type:func
osViSwapBuffer = 0x800A1950; // type:func
__osViSwapContext = 0x800A1A30; // type:func
osViBlack = 0x800A1DA0; // type:func
func_800A1E40 = 0x800A1E40; // type:func
osAfterPreNMI = 0x800A1EA0; // type:func
osInitialize = 0x800A1EE0; // type:func
ptstart = 0x800A23B4; // type:func
createSpeedParam = 0x800A23D0; // type:func
__osError = 0x800A2490; // type:func
__osDefaultHandler = 0x800A24E0; // type:func
func_800A2570 = 0x800A2570; // type:func
func_800A2600 = 0x800A2600; // type:func
func_800A2688 = 0x800A2688; // type:func
kmcErrorHandler = 0x800A28E0; // type:func
__osExceptionPreamble = 0x800A29B0; // type:func
__ptExceptionPreamble = 0x800A29C0; // type:func
D_800A29E0 = 0x800A29E0; //
func_800A33C4 = 0x800A33C4; // type:func
__osEnqueueAndYield = 0x800A34B4; // type:func
__osEnqueueThread = 0x800A35BC; // type:func
__osPopThread = 0x800A3604; // type:func
__osDispatchThread = 0x800A3614; // type:func
__osCleanupThread = 0x800A3790; // type:func
__osDisableInt = 0x800A37A0; // type:func
__osRestoreInt = 0x800A3810; // type:func
__osSetGlobalIntMask = 0x800A3830; // type:func
__osResetGlobalIntMask = 0x800A3890; // type:func
__osPiRawStartDma = 0x800A3900; // type:func
osPiGetCmdQueue = 0x800A3AE0; // type:func
__osEPiRawReadIo = 0x800A3B30; // type:func
__osEPiRawWriteIo = 0x800A3E10; // type:func
__osAiDeviceBusy = 0x800A40C0; // type:func
osInvalICache = 0x800A4110; // type:func
string_to_u32 = 0x800A4190; // type:func
send_packet = 0x800A4218; // type:func
clear_IP6 = 0x800A42DC; // type:func
send = 0x800A4354; // type:func
kdebugserver = 0x800A4444; // type:func
sqrtf = 0x800A4560; // type:func
__cosf = 0x800A4570; // type:func
guNormalize = 0x800A47B0; // type:func
osReadHost = 0x800A4890; // type:func
_Printf = 0x800A4970; // type:func
_Putfld = 0x800A5280; // type:func
osCreateLog = 0x800A5B70; // type:func
osLogEvent = 0x800A5BDC; // type:func
osFlushLog = 0x800A5C68; // type:func
__osLogWrite = 0x800A5E80; // type:func
osDpSetNextBuffer = 0x800A6080; // type:func
__osGetCause = 0x800A61B0; // type:func
__osGetSR = 0x800A61C0; // type:func
__osSetCompare = 0x800A61D0; // type:func
__osSetFpcCsr = 0x800A61E0; // type:func
__osSetSR = 0x800A61F0; // type:func
__rmonSendFault = 0x800A6200; // type:func
__rmonIOflush = 0x800A6288; // type:func
__rmonIOputw = 0x800A62E8; // type:func
__rmonIOhandler = 0x800A636C; // type:func
__osSpDeviceBusy = 0x800A6450; // type:func
__osSpSetStatus = 0x800A64A0; // type:func
__osSpSetPc = 0x800A64D0; // type:func
__osSpRawStartDma = 0x800A6520; // type:func
osSpTaskYield = 0x800A6650; // type:func
osSpTaskYielded = 0x800A6680; // type:func
__osSiRawReadIo = 0x800A6710; // type:func
__osSiRawWriteIo = 0x800A67D0; // type:func
osMapTLBRdb = 0x800A6860; // type:func
osUnmapTLBAll = 0x800A68C0; // type:func
__osViInit = 0x800A6910; // type:func
__osViGetCurrentContext = 0x800A6A70; // type:func
_Litob = 0x800A6AA0; // type:func
_Ldtob = 0x800A6E50; // type:func
_Ldunscale = 0x800A7558; // type:func
_Genld = 0x800A76A0; // type:func
__osDpDeviceBusy = 0x800A7FD0; // type:func
NotImplemented = 0x800A8020; // type:func
__rmonExecute = 0x800A8048; // type:func
__rmonWriteWordTo = 0x800A8100; // type:func
__rmonReadWordAt = 0x800A8150; // type:func
__rmonMemcpy = 0x800A81C4; // type:func
__rmonCopyWords = 0x800A8228; // type:func
strcpy = 0x800A828C; // type:func
__rmonReadMem = 0x800A82EC; // type:func
__rmonWriteMem = 0x800A8518; // type:func
__rmonListProcesses = 0x800A8770; // type:func
__rmonLoadProgram = 0x800A87FC; // type:func
__rmonGetExeName = 0x800A8824; // type:func
__rmonGetRegionCount = 0x800A88EC; // type:func
__rmonGetRegions = 0x800A8978; // type:func
__rmonSetFault = 0x800A8B70; // type:func
__rmonInit = 0x800A8BD8; // type:func
__rmonPanic = 0x800A8CBC; // type:func
__rmonSetComm = 0x800A8CE4; // type:func
LoadStoreSU = 0x800A8D40; // type:func
LoadStoreVU = 0x800A8DD0; // type:func
SetUpForRCPop = 0x800A8E78; // type:func
CleanupFromRCPop = 0x800A8F1C; // type:func
__rmonGetGRegisters = 0x800A8FC0; // type:func
__rmonSetGRegisters = 0x800A9140; // type:func
__rmonGetFRegisters = 0x800A92C4; // type:func
__rmonSetFRegisters = 0x800A9388; // type:func
rmonGetRcpRegister = 0x800A944C; // type:func
__rmonGetSRegs = 0x800A94C0; // type:func
__rmonSetSRegs = 0x800A9624; // type:func
__rmonGetVRegs = 0x800A9750; // type:func
__rmonSetVRegs = 0x800A988C; // type:func
__rmonGetRegisterContents = 0x800A996C; // type:func
__rmonMaskIdleThreadInts = 0x800A9A80; // type:func
__rmonGetTCB = 0x800A9B04; // type:func
__rmonStopUserThreads = 0x800A9B94; // type:func
__rmonListThreads = 0x800A9CD4; // type:func
__rmonGetThreadStatus = 0x800A9E34; // type:func
__rmonThreadStatus = 0x800AA144; // type:func
__rmonStopThread = 0x800AA1CC; // type:func
__rmonRunThread = 0x800AA344; // type:func
__rmonSendHeader = 0x800AA620; // type:func
__rmonSendReply = 0x800AA6C8; // type:func
__rmonSendData = 0x800AA778; // type:func
rmonMain = 0x800AA8D0; // type:func
__osSpGetStatus = 0x800AAA70; // type:func
__osSpRawReadIo = 0x800AAAA0; // type:func
__osSpRawWriteIo = 0x800AAB60; // type:func
__osSiDeviceBusy = 0x800AABF0; // type:func
__osGetActiveQueue = 0x800AAC40; // type:func
ldiv = 0x800AAC70; // type:func
lldiv = 0x800AAD3C; // type:func
__rmonRCPrunning = 0x800AAED0; // type:func
__rmonIdleRCP = 0x800AAEF4; // type:func
__rmonStepRCP = 0x800AAF38; // type:func
__rmonRunRCP = 0x800AAF4C; // type:func
SetTempBreakpoint = 0x800AAF70; // type:func
ClearTempBreakpoint = 0x800AB034; // type:func
__rmonSetBreak = 0x800AB148; // type:func
__rmonListBreak = 0x800AB348; // type:func
__rmonClearBreak = 0x800AB370; // type:func
__rmonGetBranchTarget = 0x800AB4F0; // type:func
IsJump = 0x800AB784; // type:func
__rmonSetSingleStep = 0x800AB850; // type:func
__rmonGetExceptionStatus = 0x800AB93C; // type:func
rmonSendBreakMessage = 0x800AB9BC; // type:func
__rmonHitBreak = 0x800ABA7C; // type:func
__rmonHitSpBreak = 0x800ABAB4; // type:func
__rmonHitCpuFault = 0x800ABB24; // type:func
rmonFindFaultedThreads = 0x800ABB5C; // type:func




// .data


__osPiDevMgr = 0x800BEB80; //
D_800BEB84 = 0x800BEB84; //
D_800BEB88 = 0x800BEB88; //
D_800BEB8C = 0x800BEB8C; //
D_800BEB90 = 0x800BEB90; //
D_800BEB94 = 0x800BEB94; //
D_800BEB98 = 0x800BEB98; //
__osPiTable = 0x800BEB9C; //
__osCurrentHandle = 0x800BEBA0; //
D_800BEBB0 = 0x800BEBB0; //
__osPiAccessQueueEnabled = 0x800BEBC0; //
D_800BEBD0 = 0x800BEBD0; //
D_800BEBE0 = 0x800BEBE0; //
D_800BEC48 = 0x800BEC48; //
D_800BECD0 = 0x800BECD0; //
D_800BECF8 = 0x800BECF8; //
D_800BED20 = 0x800BED20; //
D_800BED48 = 0x800BED48; //
D_800BED70 = 0x800BED70; //
D_800BEE90 = 0x800BEE90; //
D_800BEEA0 = 0x800BEEA0; //
D_FLT_800BEEB0 = 0x800BEEB0; // type:f32
D_800BEEC0 = 0x800BEEC0; //
D_800BEEC2 = 0x800BEEC2; //
D_800BEEC4 = 0x800BEEC4; //
D_800BEEC6 = 0x800BEEC6; //
D_800BEEC8 = 0x800BEEC8; //
D_800BEECC = 0x800BEECC; //
D_800BEED8 = 0x800BEED8; //
D_800BEEE0 = 0x800BEEE0; //
__osRdb_IP6_Empty = 0x800BEEF0; //
D_800BEF00 = 0x800BEF00; //
D_800BEF04 = 0x800BEF04; //
D_800BEF08 = 0x800BEF08; //
D_800BEF0C = 0x800BEF0C; //
D_800BEF10 = 0x800BEF10; //
D_800BEF24 = 0x800BEF24; //
D_800BEF28 = 0x800BEF28; //
D_800BEF2C = 0x800BEF2C; //
D_800BEF30 = 0x800BEF30; //
__osThreadTail = 0x800BEF40; //
__osRunQueue = 0x800BEF48; //
__osActiveQueue = 0x800BEF4C; //
__osRunningThread = 0x800BEF50; //
__osFaultedThread = 0x800BEF54; //
__osTimerList = 0x800BEF60; //
D_800BEF70 = 0x800BEF70; //
D_800BEF74 = 0x800BEF74; //
D_800BEF78 = 0x800BEF78; //
D_800BEF7C = 0x800BEF7C; //
D_800BEF80 = 0x800BEF80; //
D_800BEF84 = 0x800BEF84; //
D_800BEF88 = 0x800BEF88; //
__additional_scanline = 0x800BEF8C; //
osViModeTable = 0x800BEF90; //
osViModeNtscLan1 = 0x800C01B0; //
osViModePalLan1 = 0x800C0610; //
osViModeMpalLan1 = 0x800C0A70; //
D_800C1290 = 0x800C1290; //
D_800C1294 = 0x800C1294; //
osViClock = 0x800C1298; //
__osShutdown = 0x800C129C; //
__OSGlobalIntMask = 0x800C12A0; //
D_800C12B0 = 0x800C12B0; //
__osErrorHandler = 0x800C12C4; // type:void*
D_800C12D0 = 0x800C12D0; //
D_800C12D4 = 0x800C12D4; //
D_800C12D8 = 0x800C12D8; //
D_800C12DC = 0x800C12DC; //
D_800C12E0 = 0x800C12E0; //
D_800C12E4 = 0x800C12E4; //
__kmcErrorHandler = 0x800C1508; // type:void*
D_800C1510 = 0x800C1510; //
D_800C1538 = 0x800C1538; //
D_800C1540 = 0x800C1540; //
D_800C1544 = 0x800C1544; //
D_800C1548 = 0x800C1548; //
D_800C1550 = 0x800C1550; //
D_800C1560 = 0x800C1560; //
D_800C1570 = 0x800C1570; //
D_800C1594 = 0x800C1594; //
D_800C15C0 = 0x800C15C0; //
D_800C15C4 = 0x800C15C4; //
D_800C15D0 = 0x800C15D0; //
D_800C1600 = 0x800C1600; //
__osViCurr = 0x800C1630; //
__osViNext = 0x800C1634; //
D_800C1640 = 0x800C1640; //
D_800C1654 = 0x800C1654; //
D_800C1670 = 0x800C1670; //
D_800C1750 = 0x800C1750; //


// .rodata

__osRcpImTable = 0x800C7BA0; //
jtbl_800C7C20 = 0x800C7C20; // type:jtbl
RO_DBL_800C7C40 = 0x800C7C40; // type:f64
RO_DBL_800C7C50 = 0x800C7C50; // type:f64
RO_DBL_800C7C58 = 0x800C7C58; // type:f64
RO_800C7C60 = 0x800C7C60; //
jtbl_800C7C70 = 0x800C7C70; // type:jtbl
RO_DBL_800C7C88 = 0x800C7C88; // type:f64
RO_DBL_800C7C90 = 0x800C7C90; // type:f64
RO_800C7CA0 = 0x800C7CA0; //
RO_800C7CA4 = 0x800C7CA4; //
jtbl_800C7CB0 = 0x800C7CB0; // type:jtbl
RO_DBL_800C7CF8 = 0x800C7CF8; // type:f64
RO_DBL_800C7D00 = 0x800C7D00; // type:f64
RO_DBL_800C7D08 = 0x800C7D08; // type:f64
RO_800C7D10 = 0x800C7D10; //
RO_DBL_800C7D50 = 0x800C7D50; // type:f64
RO_DBL_800C7D58 = 0x800C7D58; // type:f64
RO_DBL_800C7D60 = 0x800C7D60; // type:f64
RO_DBL_800C7D68 = 0x800C7D68; // type:f64
RO_DBL_800C7D70 = 0x800C7D70; // type:f64
RO_DBL_800C7D78 = 0x800C7D78; // type:f64
RO_DBL_800C7D80 = 0x800C7D80; // type:f64
RO_DBL_800C7D88 = 0x800C7D88; // type:f64
RO_DBL_800C7D90 = 0x800C7D90; // type:f64
RO_DBL_800C7DA0 = 0x800C7DA0; // type:f64
jtbl_800C7DA8 = 0x800C7DA8; // type:jtbl
RO_STR_800C7DD0 = 0x800C7DD0; // type:asciz
RO_STR_800C7DD4 = 0x800C7DD4; // type:asciz
jtbl_800C7DE0 = 0x800C7DE0; // type:jtbl
RO_DBL_800C7E00 = 0x800C7E00; // type:f64
RO_DBL_800C7E08 = 0x800C7E08; // type:f64
RO_DBL_800C7E10 = 0x800C7E10; // type:f64
RO_DBL_800C7E18 = 0x800C7E18; // type:f64
RO_DBL_800C7E20 = 0x800C7E20; // type:f64
RO_DBL_800C7E28 = 0x800C7E28; // type:f64
RO_STR_800C7E30 = 0x800C7E30; // type:asciz
RO_STR_800C7E34 = 0x800C7E34; // type:asciz
RO_STR_800C7E3C = 0x800C7E3C; // type:asciz
RO_800C7E50 = 0x800C7E50; //
RO_DBL_800C7E60 = 0x800C7E60; // type:f64
RO_DBL_800C7E68 = 0x800C7E68; // type:f64
RO_STR_800C7E70 = 0x800C7E70; // type:asciz
RO_STR_800C7E80 = 0x800C7E80; // type:asciz
RO_DBL_800C7EA0 = 0x800C7EA0; // type:f64
RO_DBL_800C7EA8 = 0x800C7EA8; // type:f64
RO_DBL_800C7EB0 = 0x800C7EB0; // type:f64
RO_DBL_800C7EC0 = 0x800C7EC0; // type:f64
RO_DBL_800C7EC8 = 0x800C7EC8; // type:f64
RO_DBL_800C7ED0 = 0x800C7ED0; // type:f64
RO_DBL_800C7ED8 = 0x800C7ED8; // type:f64
RO_DBL_800C7EE8 = 0x800C7EE8; // type:f64
RO_DBL_800C7EF0 = 0x800C7EF0; // type:f64
RO_DBL_800C7EF8 = 0x800C7EF8; // type:f64
RO_DBL_800C7F00 = 0x800C7F00; // type:f64
RO_DBL_800C7F08 = 0x800C7F08; // type:f64
RO_DBL_800C7F10 = 0x800C7F10; // type:f64
RO_DBL_800C7F18 = 0x800C7F18; // type:f64
RO_FLT_800C7F20 = 0x800C7F20; // type:f32
RO_DBL_800C7F28 = 0x800C7F28; // type:f64
RO_DBL_800C7F30 = 0x800C7F30; // type:f64
RO_800C7F40 = 0x800C7F40; //
RO_800C7F44 = 0x800C7F44; //
jtbl_800C7F50 = 0x800C7F50; // type:jtbl
RO_STR_800C7F70 = 0x800C7F70; // type:asciz
RO_STR_800C7F74 = 0x800C7F74; // type:asciz
RO_STR_800C7F80 = 0x800C7F80; // type:asciz
RO_STR_800C7F84 = 0x800C7F84; // type:asciz
RO_STR_800C7F94 = 0x800C7F94; // type:asciz
RO_STR_800C7F98 = 0x800C7F98; // type:asciz
RO_STR_800C7FA4 = 0x800C7FA4; // type:asciz
RO_STR_800C7FA8 = 0x800C7FA8; // type:asciz
RO_DBL_800C7FC0 = 0x800C7FC0; // type:f64
RO_STR_800C7FD0 = 0x800C7FD0; // type:asciz
RO_STR_800C8000 = 0x800C8000; // type:asciz
RO_STR_800C8040 = 0x800C8040; // type:asciz
RO_STR_800C808C = 0x800C808C; // type:asciz
RO_STR_800C80D4 = 0x800C80D4; // type:asciz
RO_STR_800C8100 = 0x800C8100; // type:asciz
RO_STR_800C8148 = 0x800C8148; // type:asciz
RO_STR_800C8184 = 0x800C8184; // type:asciz
RO_STR_800C81BC = 0x800C81BC; // type:asciz
RO_STR_800C81EC = 0x800C81EC; // type:asciz
RO_STR_800C8208 = 0x800C8208; // type:asciz
RO_STR_800C8230 = 0x800C8230; // type:asciz
RO_STR_800C8254 = 0x800C8254; // type:asciz
RO_STR_800C827C = 0x800C827C; // type:asciz
RO_STR_800C82A8 = 0x800C82A8; // type:asciz
RO_STR_800C82EC = 0x800C82EC; // type:asciz
RO_STR_800C8320 = 0x800C8320; // type:asciz
RO_STR_800C8350 = 0x800C8350; // type:asciz
RO_STR_800C8384 = 0x800C8384; // type:asciz
RO_STR_800C83B0 = 0x800C83B0; // type:asciz
RO_STR_800C83D8 = 0x800C83D8; // type:asciz
RO_STR_800C8404 = 0x800C8404; // type:asciz
RO_STR_800C8428 = 0x800C8428; // type:asciz
RO_STR_800C844C = 0x800C844C; // type:asciz
RO_STR_800C8484 = 0x800C8484; // type:asciz
RO_STR_800C84BC = 0x800C84BC; // type:asciz
RO_STR_800C84F0 = 0x800C84F0; // type:asciz
RO_STR_800C8528 = 0x800C8528; // type:asciz
RO_STR_800C8564 = 0x800C8564; // type:asciz
RO_STR_800C85A8 = 0x800C85A8; // type:asciz
RO_STR_800C85C8 = 0x800C85C8; // type:asciz
RO_STR_800C85E8 = 0x800C85E8; // type:asciz
RO_STR_800C861C = 0x800C861C; // type:asciz
RO_STR_800C864C = 0x800C864C; // type:asciz
RO_STR_800C8670 = 0x800C8670; // type:asciz
RO_STR_800C8690 = 0x800C8690; // type:asciz
RO_STR_800C86B0 = 0x800C86B0; // type:asciz
RO_STR_800C86EC = 0x800C86EC; // type:asciz
RO_STR_800C8728 = 0x800C8728; // type:asciz
RO_STR_800C8764 = 0x800C8764; // type:asciz
RO_STR_800C87A0 = 0x800C87A0; // type:asciz
RO_STR_800C87DC = 0x800C87DC; // type:asciz
RO_STR_800C8810 = 0x800C8810; // type:asciz
RO_STR_800C884C = 0x800C884C; // type:asciz
RO_STR_800C8880 = 0x800C8880; // type:asciz
RO_STR_800C88A8 = 0x800C88A8; // type:asciz
RO_STR_800C88DC = 0x800C88DC; // type:asciz
RO_STR_800C8910 = 0x800C8910; // type:asciz
RO_STR_800C894C = 0x800C894C; // type:asciz
RO_STR_800C8980 = 0x800C8980; // type:asciz
RO_STR_800C89B0 = 0x800C89B0; // type:asciz
RO_STR_800C89F0 = 0x800C89F0; // type:asciz
RO_STR_800C8A10 = 0x800C8A10; // type:asciz
RO_STR_800C8A5C = 0x800C8A5C; // type:asciz
RO_STR_800C8A98 = 0x800C8A98; // type:asciz
RO_STR_800C8AD8 = 0x800C8AD8; // type:asciz
RO_STR_800C8B14 = 0x800C8B14; // type:asciz
RO_STR_800C8B4C = 0x800C8B4C; // type:asciz
RO_STR_800C8B84 = 0x800C8B84; // type:asciz
RO_STR_800C8BBC = 0x800C8BBC; // type:asciz
RO_STR_800C8C10 = 0x800C8C10; // type:asciz
RO_STR_800C8C3C = 0x800C8C3C; // type:asciz
RO_STR_800C8C68 = 0x800C8C68; // type:asciz
RO_STR_800C8CA4 = 0x800C8CA4; // type:asciz
RO_STR_800C8CD0 = 0x800C8CD0; // type:asciz
RO_STR_800C8D08 = 0x800C8D08; // type:asciz
RO_STR_800C8D34 = 0x800C8D34; // type:asciz
RO_STR_800C8D70 = 0x800C8D70; // type:asciz
RO_STR_800C8DAC = 0x800C8DAC; // type:asciz
RO_STR_800C8DE8 = 0x800C8DE8; // type:asciz
RO_STR_800C8E1C = 0x800C8E1C; // type:asciz
RO_STR_800C8E54 = 0x800C8E54; // type:asciz
RO_STR_800C8E94 = 0x800C8E94; // type:asciz
RO_STR_800C8EC8 = 0x800C8EC8; // type:asciz
RO_STR_800C8F08 = 0x800C8F08; // type:asciz
RO_STR_800C8F3C = 0x800C8F3C; // type:asciz
RO_STR_800C8F70 = 0x800C8F70; // type:asciz
RO_STR_800C8FA4 = 0x800C8FA4; // type:asciz
RO_STR_800C8FD4 = 0x800C8FD4; // type:asciz
RO_STR_800C900C = 0x800C900C; // type:asciz
RO_STR_800C9040 = 0x800C9040; // type:asciz
RO_STR_800C9070 = 0x800C9070; // type:asciz
RO_STR_800C90AC = 0x800C90AC; // type:asciz
RO_STR_800C90E8 = 0x800C90E8; // type:asciz
RO_STR_800C9120 = 0x800C9120; // type:asciz
RO_STR_800C915C = 0x800C915C; // type:asciz
RO_STR_800C9198 = 0x800C9198; // type:asciz
RO_STR_800C91CC = 0x800C91CC; // type:asciz
RO_STR_800C9200 = 0x800C9200; // type:asciz
RO_STR_800C9238 = 0x800C9238; // type:asciz
RO_STR_800C926C = 0x800C926C; // type:asciz
RO_STR_800C92A8 = 0x800C92A8; // type:asciz
RO_STR_800C92E8 = 0x800C92E8; // type:asciz
RO_STR_800C9320 = 0x800C9320; // type:asciz
RO_STR_800C9358 = 0x800C9358; // type:asciz
RO_STR_800C9390 = 0x800C9390; // type:asciz
RO_STR_800C93C8 = 0x800C93C8; // type:asciz
RO_STR_800C9404 = 0x800C9404; // type:asciz
RO_STR_800C943C = 0x800C943C; // type:asciz
RO_STR_800C9478 = 0x800C9478; // type:asciz
RO_STR_800C94AC = 0x800C94AC; // type:asciz
RO_STR_800C94DC = 0x800C94DC; // type:asciz
RO_STR_800C9508 = 0x800C9508; // type:asciz
RO_STR_800C9540 = 0x800C9540; // type:asciz
RO_STR_800C956C = 0x800C956C; // type:asciz
RO_STR_800C9594 = 0x800C9594; // type:asciz
RO_STR_800C95D0 = 0x800C95D0; // type:asciz
RO_STR_800C960C = 0x800C960C; // type:asciz
RO_STR_800C9648 = 0x800C9648; // type:asciz
RO_STR_800C9678 = 0x800C9678; // type:asciz
RO_STR_800C96AC = 0x800C96AC; // type:asciz
RO_STR_800C96EC = 0x800C96EC; // type:asciz
RO_STR_800C9720 = 0x800C9720; // type:asciz
RO_STR_800C975C = 0x800C975C; // type:asciz
RO_800C9760 = 0x800C9760; //
jtbl_800C9780 = 0x800C9780; // type:jtbl
RO_800C97A4 = 0x800C97A4; //
RO_STR_800C97D0 = 0x800C97D0; // type:asciz
RO_STR_800C97D4 = 0x800C97D4; // type:asciz
__libm_qnan_f = 0x800C97F0; // type:f32
RO_DBL_800C9808 = 0x800C9808; // type:f64
RO_DBL_800C9810 = 0x800C9810; // type:f64
RO_DBL_800C9818 = 0x800C9818; // type:f64
RO_DBL_800C9820 = 0x800C9820; // type:f64
RO_DBL_800C9828 = 0x800C9828; // type:f64
RO_DBL_800C9830 = 0x800C9830; // type:f64
RO_DBL_800C9838 = 0x800C9838; // type:f64
RO_FLT_800C9840 = 0x800C9840; // type:f32
RO_DBL_800C9848 = 0x800C9848; // type:f64
RO_DBL_800C9850 = 0x800C9850; // type:f64
RO_DBL_800C9858 = 0x800C9858; // type:f64
RO_DBL_800C9860 = 0x800C9860; // type:f64
RO_800C9870 = 0x800C9870; //
RO_800C9878 = 0x800C9878; //
RO_STR_800C9890 = 0x800C9890; // type:asciz
jtbl_800C9898 = 0x800C9898; // type:jtbl
RO_800C99E8 = 0x800C99E8; //
RO_800C99EC = 0x800C99EC; //
RO_800C99F8 = 0x800C99F8; //
RO_800C99FC = 0x800C99FC; //
RO_STR_800C9A08 = 0x800C9A08; // type:asciz
RO_STR_800C9A0C = 0x800C9A0C; // type:asciz
RO_DBL_800C9A20 = 0x800C9A20; // type:f64
RO_STR_800C9A68 = 0x800C9A68; // type:asciz
RO_STR_800C9A6C = 0x800C9A6C; // type:asciz
RO_DBL_800C9A70 = 0x800C9A70; // type:f64
RO_DBL_800C9A78 = 0x800C9A78; // type:f64
RO_STR_800C9A80 = 0x800C9A80; // type:asciz
RO_STR_800C9A90 = 0x800C9A90; // type:asciz
RO_STR_800C9A98 = 0x800C9A98; // type:asciz
RO_800C9AA0 = 0x800C9AA0; //
RO_800C9AA4 = 0x800C9AA4; //
RO_STR_800C9AB0 = 0x800C9AB0; // type:asciz
RO_STR_800C9AB4 = 0x800C9AB4; // type:asciz
jtbl_800C9AC8 = 0x800C9AC8; // type:jtbl
RO_STR_800C9B28 = 0x800C9B28; // type:asciz




// .bss

B_801922E0 = 0x801922E0; //

B_80193AB0 = 0x80193AB0; //

B_80193AD0 = 0x80193AD0; //

B_80193B20 = 0x80193B20; //

B_80194D90 = 0x80194D90; //

B_80194DA0 = 0x80194DA0; //

B_80194DC0 = 0x80194DC0; //

B_80194DE0 = 0x80194DE0; //

B_80194E00 = 0x80194E00; //

B_80199010 = 0x80199010; //

B_80199030 = 0x80199030; //

B_801994B0 = 0x801994B0; //

__osRdb_DbgRead_Buf = 0x8019C254; // size:0x4

__osBaseCounter = 0x801AA718; // size:0x4

__kmc_pt_mode = 0x801AA72C; // size:0x4
__osThreadSave = 0x801AA730; //

__osProfileOverflowBin = 0x801AA8E4; // size:0x4

__osContPifRam = 0x801AA920; // size:0x40

__osRdb_IP6_CurWrite = 0x801AA9A0; // size:0x4

__Dom2SpeedParam = 0x801AAA08; //

__osProfileList = 0x801AAA7C; // size:0x4

__osViIntrCount = 0x801ACD08; // size:0x4

__osRdb_Read_Data_Ct = 0x801C5D8C; // size:0x4

__osRdb_IP6_Size = 0x801C5F50; // size:0x4

__osMaxControllers = 0x801C5FC0; // size:0x1

__osCurrentTime = 0x801C5FF8; // size:0x8

__CartRomHandle = 0x801C6008; // size:0x74

__osPiAccessQueue = 0x801C6190; //

__Dom1SpeedParam = 0x801C61E0; //

__rmonUtilityBuffer = 0x801C6328; // size:0x100

rmonRdbReadBuf = 0x801C6480; // size:0x800

__osContLastCmd = 0x801C6C8A; // size:0x1

__osEepromTimerMsg = 0x801F8D00; // size:0x4

__osRdb_IP6_CurSend = 0x801F8D60; // size:0x4

__osTimerCounter = 0x801F8D7C; // size:0x4

__osProfileListEnd = 0x801F9B3C; // size:0x4

__osProfTimerQ = 0x801F9B48; // size:0x18

__osRdb_Read_Data_Buf = 0x801F9E18; // size:0x4

__osEventStateTab = 0x801FAA30; // size:0xB8

__osRdb_IP6_Data = 0x801FAB18; // size:0x4

__osEepromTimerQ = 0x801FAB40; // size:0x18

__rmonRcpAtBreak = 0x801FAF80; // size:0x1

__rmonMQ = 0x801FAF88; // size:0x18
__osRdb_IP6_Ct = 0x801FAFA0; // size:0x4
