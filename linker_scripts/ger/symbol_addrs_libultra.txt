osTvType = 0x80000300; // (initialize, false)
osRomBase = 0x80000308; // (pirawdma, false)
osResetType = 0x8000030C; // (initialize, false)
osAppNMIBuffer = 0x8000031C; // (initialize, false)
osAckRamromRead = 0x80001BCC; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80001BCC; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80001BCC; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80003F40; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80003F40; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80003F40; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x800051E0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x800051E0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x800051E0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8001CA60; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8001CA60; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8001CA60; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8002C48C; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8002C48C; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8002C48C; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8002DDD0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8002DDD0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8002DDD0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8003100C; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8003100C; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8003100C; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8003E630; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8003E630; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8003E630; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80040EA0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80040EA0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80040EA0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80044640; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80044640; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80044640; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8004CFD0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8004CFD0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8004CFD0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x800512A0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x800512A0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x800512A0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8005C4AC; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8005C4AC; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8005C4AC; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80065320; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80065320; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80065320; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80065F5C; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80065F5C; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80065F5C; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80069200; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80069200; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80069200; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8006E7D0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8006E7D0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8006E7D0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8006FB4C; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8006FB4C; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8006FB4C; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x800702CC; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x800702CC; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x800702CC; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8007272C; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8007272C; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8007272C; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80072820; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80072820; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80072820; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80072910; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80072910; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80072910; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80072A00; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80072A00; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80072A00; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80072AF0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80072AF0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80072AF0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80072BE0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80072BE0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80072BE0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80072CD0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80072CD0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80072CD0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80072DC0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80072DC0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80072DC0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80072EB0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80072EB0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80072EB0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80072FA0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80072FA0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80072FA0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80073090; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80073090; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80073090; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80073180; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80073180; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80073180; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80073270; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80073270; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80073270; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80073360; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80073360; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80073360; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80073450; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80073450; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80073450; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80073540; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80073540; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80073540; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80073630; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80073630; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80073630; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x80073BF0; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80073BF0; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80073BF0; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8008E924; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8008E924; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8008E924; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8008E9DC; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8008E9DC; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8008E9DC; // size:0x8 (synfreefx, true)
osAckRamromRead = 0x8008EBDC; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8008EBDC; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8008EBDC; // size:0x8 (synfreefx, true)
osSetIntMask = 0x8008FD60; // (sched, false)
osCreatePiManager = 0x8008FE00; // size:0x1CC (pimgr, true)
ramromMain = 0x8008FFCC; // size:0xD8 (pimgr, true)
__osEPiRawStartDma = 0x800900B0; // size:0x1EC (epirawdma, true)
osEPiStartDma = 0x80090360; // size:0x94 (epidma, true)
osEPiLinkHandle = 0x80090400; // size:0x44 (epilinkhandle, true)
osCartRomInit = 0x80090450; // size:0x178 (cartrominit, true)
__osDevMgrMain = 0x800905D0; // size:0x3B8 (devmgr, true)
__osPiCreateAccessQueue = 0x80090990; // (pimgr, false)
__osPiGetAccess = 0x800909E4; // (cartrominit, false)
__osPiRelAccess = 0x80090A50; // (cartrominit, false)
osPiStartDma = 0x80090A80; // size:0xA8 (pidma, true)
osAiGetLength = 0x80090B30; // size:0x10 (aigetlen, true)
osAiGetStatus = 0x80090B40; // size:0x10 (aigetstat, true)
osAiSetFrequency = 0x80090B50; // size:0x118 (aisetfreq, true)
osAckRamromRead = 0x80090C60; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80090C60; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80090C60; // size:0x8 (synfreefx, true)
osAiSetNextBuffer = 0x80090C70; // size:0x94 (aisetnextbuf, true)
_init_lpfilter = 0x80090D10; // size:0xA4 (drvrnew, true)
alFxNew = 0x80090DB4; // size:0x498 (drvrnew, true)
alEnvmixerNew = 0x8009124C; // size:0xB8 (drvrnew, true)
alLoadNew = 0x80091304; // size:0xB0 (drvrnew, true)
alResampleNew = 0x800913B4; // size:0x8C (drvrnew, true)
alAuxBusNew = 0x80091440; // size:0x5C (drvrnew, true)
alMainBusNew = 0x8009149C; // size:0x5C (drvrnew, true)
alSaveNew = 0x800914F8; // size:0x44 (drvrnew, true)
alAdpcmPull = 0x80091540; // size:0x444 (load, true)
alRaw16Pull = 0x80091984; // size:0x39C (load, true)
// = 0x80091C69; // (load, false)
alLoadParam = 0x80091D20; // size:0x1AC (load, true)
_decodeChunk = 0x80091ECC; // size:0x178 (load, true)
alAuxBusPull = 0x80092050; // size:0xDC (auxbus, true)
alAuxBusParam = 0x8009212C; // size:0x30 (auxbus, true)
alEnvmixerPull = 0x80092160; // size:0x500 (env, true)
// = 0x800925BF; // (env, false)
alEnvmixerParam = 0x80092660; // size:0xD4 (env, true)
_pullSubFrame = 0x80092734; // size:0x2D4 (env, true)
// = 0x800928A1; // (env, false)
_frexpf = 0x80092A08; // size:0xE0 (env, true)
// = 0x80092A81; // (env, false)
_ldexpf = 0x80092AE8; // size:0x24 (env, true)
_getRate = 0x80092B0C; // size:0x280 (env, true)
_getVol = 0x80092D8C; // size:0x84 (env, true)
alFilterNew = 0x80092E10; // size:0x1C (filter, true)
alMainBusPull = 0x80092E30; // size:0x140 (mainbus, true)
alMainBusParam = 0x80092F70; // size:0x30 (mainbus, true)
alResamplePull = 0x80092FA0; // size:0x1EC (resample, true)
alResampleParam = 0x8009318C; // size:0xC0 (resample, true)
alFxPull = 0x80093250; // size:0x374 (reverb, true)
alFxParam = 0x800935C4; // size:0x14 (reverb, true)
alFxParamHdl = 0x800935D8; // size:0x1F0 (reverb, true)
// = 0x8009366A; // (reverb, false)
_loadOutputBuffer = 0x800937C8; // size:0x218 (reverb, true)
// = 0x800937FC; // (reverb, false)
// = 0x80093910; // (reverb, false)
_loadBuffer = 0x800939E0; // size:0x170 (reverb, true)
// = 0x80093A24; // (reverb, false)
// = 0x80093A99; // (reverb, false)
_saveBuffer = 0x80093B50; // size:0x170 (reverb, true)
_filterBuffer = 0x80093CC0; // size:0x9C (reverb, true)
_doModFunc = 0x80093D5C; // size:0x8C (reverb, true)
alSavePull = 0x80093DF0; // size:0xA8 (save, true)
alSaveParam = 0x80093E98; // size:0x28 (save, true)
alInit = 0x80093EC0; // size:0x2C (sl, true)
alClose = 0x80093EEC; // size:0x30 (sl, true)
alLink = 0x80093F1C; // size:0x20 (sl, true)
alUnlink = 0x80093F3C; // size:0x30 (sl, true)
alHeapInit = 0x80093F70; // size:0x34 (heapinit, true)
alHeapDBAlloc = 0x80093FB0; // size:0x48 (heapalloc, true)
alCopy = 0x80094000; // size:0x34 (copy, true)
osAckRamromRead = 0x8009402C; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8009402C; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8009402C; // size:0x8 (synfreefx, true)
alSynNew = 0x80094040; // size:0x2CC (synthesizer, true)
alAudioFrame = 0x8009430C; // size:0x1B0 (synthesizer, true)
// = 0x800943D0; // (synthesizer, false)
// = 0x8009443F; // (synthesizer, false)
// = 0x800944AE; // (synthesizer, false)
__allocParam = 0x800944BC; // size:0x2C (synthesizer, true)
__freeParam = 0x800944E8; // size:0x18 (synthesizer, true)
_collectPVoices = 0x80094500; // size:0x54 (synthesizer, true)
_freePVoice = 0x80094554; // size:0x40 (synthesizer, true)
_timeToSamplesNoRound = 0x80094594; // size:0x48 (synthesizer, true)
_timeToSamples = 0x800945DC; // size:0x4C (synthesizer, true)
__nextSampleTime = 0x80094628; // size:0x54 (synthesizer, true)
alSynDelete = 0x80094680; // size:0x8 (syndelete, true)
alSynAddPlayer = 0x80094690; // size:0x50 (synaddplayer, true)
alSynRemovePlayer = 0x800946E0; // size:0x94 (synremoveplayer, true)
alSynFreeVoice = 0x80094780; // size:0x9C (synfreevoice, true)
alSynAllocVoice = 0x80094820; // size:0x128 (synallocvoice, true)
// = 0x800948FE; // (synallocvoice, false)
_allocatePVoice = 0x80094948; // size:0xB8 (synallocvoice, true)
alSynStopVoice = 0x80094A00; // size:0x7C (synstopvoice, true)
alSynStartVoice = 0x80094A80; // size:0x94 (synstartvoice, true)
alSynSetPitch = 0x80094B20; // size:0x90 (synsetpitch, true)
alSynSetVol = 0x80094BB0; // size:0xB8 (synsetvol, true)
alSynSetFXMix = 0x80094C70; // size:0xA0 (synsetfxmix, true)
alSynSetPan = 0x80094D10; // size:0x90 (synsetpan, true)
alSynAllocFX = 0x80094DA0; // size:0x94 (synallocfx, true)
osInvalDCache = 0x80094E40; // (sirawdma, false)
osWritebackDCache = 0x80094EF0; // (initialize, false)
osAckRamromRead = 0x80094F5C; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80094F5C; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80094F5C; // size:0x8 (synfreefx, true)
osWritebackDCacheAll = 0x80094F70; // (sched, false)
osAckRamromRead = 0x80094F90; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80094F90; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80094F90; // size:0x8 (synfreefx, true)
osContStartQuery = 0x80094FA0; // size:0x80 (contquery, true)
osContGetQuery = 0x80095020; // size:0x20 (contquery, true)
osContStartReadData = 0x80095040; // size:0x88 (contreaddata, true)
osContGetReadData = 0x800950C8; // size:0x9C (contreaddata, true)
// = 0x8009511B; // (contreaddata, false)
__osPackReadData = 0x80095164; // size:0xB8 (contreaddata, true)
osContReset = 0x80095220; // size:0x100 (contreset, true)
// = 0x800952E0; // (contreset, false)
__osPackResetData = 0x80095320; // size:0x38 (contreset, true)
osContInit = 0x80095360; // size:0x19C (controller, true)
// = 0x80095495; // (controller, false)
__osContGetInitData = 0x800954FC; // size:0xB4 (controller, true)
// = 0x8009551C; // (controller, false)
__osPackRequestData = 0x800955B0; // size:0xBC (controller, true)
osContSetCh = 0x80095670; // size:0x60 (contsetch, true)
osVirtualToPhysical = 0x800956D0; // size:0x54 (virtualtophysical, true)
guLookAtF = 0x80095730; // size:0x380 (lookat, true)
guLookAt = 0x80095AB0; // size:0x384 (lookat, true)
guMtxF2L = 0x80095E40; // size:0x98 (mtxutil, true)
guMtxL2F = 0x80095ED8; // size:0xA8 (mtxutil, true)
guMtxIdentF = 0x80095F80; // size:0x50 (mtxutil, true)
guMtxIdent = 0x80095FD0; // size:0xF0 (mtxutil, true)
guPerspectiveF = 0x800960C0; // size:0x1B0 (perspective, true)
guPerspective = 0x80096270; // size:0x1C8 (perspective, true)
guRotateF = 0x80096440; // size:0x15C (rotate, true)
guRotate = 0x8009659C; // size:0x178 (rotate, true)
__sinf = 0x80096720; // size:0x1A0 (sinf, true)
sinf = 0x80096720; // (perspective, false)
guTranslateF = 0x800968C0; // size:0x54 (translate, true)
guTranslate = 0x80096914; // size:0x70 (translate, true)
guS2DInitBg = 0x80096990; // size:0x13C (us2dex, true)
guS2DEmuSetScissor = 0x80096AD0; // size:0x44 (us2dex_emu, true)
// = 0x80096B03; // (us2dex_emu, false)
tmemLoad = 0x80096B14; // size:0x588 (us2dex_emu, true)
guS2DEmuBgRect1Cyc = 0x8009709C; // size:0x988 (us2dex_emu, true)
__osRdbSend = 0x80097A30; // size:0x218 (rdbsend, true)
osInitRdb = 0x80097C50; // size:0x74 (initrdb, true)
bcopy = 0x80097CD0; // (sptask, false)
bzero = 0x80097FF0; // (cartrominit, false)
sprintf = 0x80098090; // size:0x58 (sprintf, true)
proutSprintf = 0x800980E8; // size:0x34 (sprintf, true)
kmc_proutSyncPrintf = 0x80098120; // size:0x238 (syncprintf, true)
osSyncPrintf = 0x80098358; // size:0x64 (syncprintf, true)
rmonPrintf = 0x800983BC; // size:0x48 (syncprintf, true)
proutSyncPrintf = 0x80098404; // size:0x60 (syncprintf, true)
osCreateMesgQueue = 0x80098470; // size:0x24 (createmesgqueue, true)
osJamMesg = 0x800984A0; // size:0x134 (jammesg, true)
osRecvMesg = 0x800985E0; // size:0x124 (recvmesg, true)
osSendMesg = 0x80098710; // size:0x130 (sendmesg, true)
osSetEventMesg = 0x80098840; // size:0xAC (seteventmesg, true)
osGetCount = 0x800988F0; // (gettime, false)
osSpTaskLoad = 0x80098900; // size:0x20C (sptask, true)
osSpTaskStartGo = 0x80098B0C; // size:0x2C (sptask, true)
osCreateScheduler = 0x80098B40; // size:0x148 (sched, true)
osScAddClient = 0x80098C88; // size:0x58 (sched, true)
osScRemoveClient = 0x80098CE0; // size:0x90 (sched, true)
osScGetCmdQ = 0x80098D70; // size:0x8 (sched, true)
__scMain = 0x80098D78; // size:0x104 (sched, true)
// = 0x80098DAD; // (sched, false)
// = 0x80098E6D; // (sched, false)
__scHandleRetrace = 0x80098E7C; // size:0x100 (sched, true)
// = 0x80098F4B; // (sched, false)
__scHandleRSP = 0x80098F7C; // size:0x128 (sched, true)
// = 0x80098FF6; // (sched, false)
// = 0x8009908F; // (sched, false)
__scHandleRDP = 0x800990A4; // size:0x90 (sched, true)
// = 0x800990D1; // (sched, false)
__scTaskReady = 0x80099134; // size:0x54 (sched, true)
// = 0x80099176; // (sched, false)
__scTaskComplete = 0x80099188; // size:0xCC (sched, true)
// = 0x800991A0; // (sched, false)
__scAppendList = 0x80099254; // size:0x58 (sched, true)
__scExec = 0x800992AC; // size:0xDC (sched, true)
__scYield = 0x80099388; // size:0x38 (sched, true)
__scSchedule = 0x800993C0; // size:0x214 (sched, true)
__osSiRawStartDma = 0x800995E0; // size:0xA4 (sirawdma, true)
__osSiCreateAccessQueue = 0x80099690; // (controller, false)
__osSiGetAccess = 0x800996E4; // (contquery, false)
__osSiRelAccess = 0x80099750; // (contquery, false)
osCreateThread = 0x80099780; // size:0xD0 (createthread, true)
osDestroyThread = 0x80099850; // size:0xD8 (destroythread, true)
osGetThreadPri = 0x80099930; // size:0x18 (getthreadpri, true)
osSetThreadPri = 0x80099950; // size:0xC8 (setthreadpri, true)
osStartThread = 0x80099A20; // size:0x118 (startthread, true)
osStopThread = 0x80099B40; // size:0xB4 (stopthread, true)
__osDequeueThread = 0x80099C00; // size:0x34 (thread, true)
osAckRamromRead = 0x80099C2C; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x80099C2C; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x80099C2C; // size:0x8 (synfreefx, true)
osYieldThread = 0x80099C40; // size:0x48 (yieldthread, true)
osGetTime = 0x80099C90; // size:0x84 (gettime, true)
osSetTimer = 0x80099D20; // size:0x94 (settimer, true)
__osTimerServicesInit = 0x80099DC0; // size:0x54 (timerintr, true)
__osTimerInterrupt = 0x80099E14; // size:0x1E4 (timerintr, true)
// = 0x80099F6A; // (timerintr, false)
// = 0x80099FB2; // (timerintr, false)
__osSetTimerIntr = 0x80099FF8; // size:0x60 (timerintr, true)
__osInsertTimer = 0x8009A058; // size:0x108 (timerintr, true)
__osProbeTLB = 0x8009A160; // (virtualtophysical, false)
osAckRamromRead = 0x8009A210; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8009A210; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8009A210; // size:0x8 (synfreefx, true)
osViGetCurrentFramebuffer = 0x8009A220; // (sched, false)
osViGetNextFramebuffer = 0x8009A260; // (sched, false)
osViGetCurrentLine = 0x8009A2A0; // size:0x10 (vigetline, true)
osCreateViManager = 0x8009A2B0; // size:0x1A0 (vimgr, true)
viMgrMain = 0x8009A450; // size:0x198 (vimgr, true)
osViSetEvent = 0x8009A5F0; // size:0x58 (visetevent, true)
osViSetMode = 0x8009A650; // size:0x4C (visetmode, true)
osViSetSpecialFeatures = 0x8009A6A0; // size:0x164 (visetspecial, true)
osViSetYScale = 0x8009A810; // size:0x44 (visetyscale, true)
osViSwapBuffer = 0x8009A860; // size:0x44 (viswapbuf, true)
__osViSwapContext = 0x8009A8B0; // size:0x308 (viswapcontext, true)
osViBlack = 0x8009ABC0; // size:0x5C (viblack, true)
osAfterPreNMI = 0x8009AC80; // size:0x1C (afterprenmi, true)
osInitialize = 0x8009ACA0; // size:0x33C (initialize, true)
// = 0x8009AF0D; // (initialize, false)
createSpeedParam = 0x8009AFDC; // size:0xB8 (initialize, true)
// = 0x8009B0A0; // (exceptasm, false)
__osExceptionPreamble = 0x8009B0A0; // (initialize, false)
__ptExceptionPreamble = 0x8009B0B0; // (initialize, false)
// = 0x8009B82F; // (exceptasm, false)
// = 0x8009B9A9; // (exceptasm, false)
// = 0x8009B9DF; // (exceptasm, false)
__osEnqueueAndYield = 0x8009BBA4; // (jammesg, false)
__osEnqueueThread = 0x8009BCAC; // (setthreadpri, false)
__osPopThread = 0x8009BCF4; // (jammesg, false)
__osDispatchThread = 0x8009BD04; // (destroythread, false)
__osCleanupThread = 0x8009BE80; // (createthread, false)
__osDisableInt = 0x8009BE90; // (cartrominit, false)
__osRestoreInt = 0x8009BF00; // (cartrominit, false)
__osSetGlobalIntMask = 0x8009BF20; // size:0x40 (setglobalintmask, true)
__osResetGlobalIntMask = 0x8009BF60; // size:0x48 (resetglobalintmask, true)
__osPiRawStartDma = 0x8009BFB0; // size:0xD0 (pirawdma, true)
osPiGetCmdQueue = 0x8009C080; // size:0x20 (pigetcmdq, true)
__osEPiRawReadIo = 0x8009C0A0; // size:0x168 (epirawread, true)
alHeapCheck = 0x8009C200; // size:0x8 (heapcheck, true)
__osEPiRawWriteIo = 0x8009C210; // size:0x164 (epirawwrite, true)
alHeapCheck = 0x8009C36C; // size:0x8 (heapcheck, true)
__osAiDeviceBusy = 0x8009C380; // size:0x14 (ai, true)
osInvalICache = 0x8009C3A0; // (initialize, false)
osAckRamromRead = 0x8009C40C; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8009C40C; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8009C40C; // size:0x8 (synfreefx, true)
send = 0x8009C420; // size:0x1A8 (kdebugserver, true)
kdebugserver = 0x8009C5C8; // size:0x110 (kdebugserver, true)
sqrtf = 0x8009C6E0; // (lookat, false)
__cosf = 0x8009C6F0; // size:0x150 (cosf, true)
cosf = 0x8009C6F0; // (perspective, false)
guNormalize = 0x8009C840; // size:0xA8 (normalize, true)
osReadHost = 0x8009C8F0; // size:0xC4 (readhost, true)
strchr = 0x8009C9C0; // size:0x38 (string, true)
strlen = 0x8009C9F8; // size:0x24 (string, true)
memcpy = 0x8009CA1C; // size:0x28 (string, true)
_Printf = 0x8009CA50; // size:0x570 (xprintf, true)
// = 0x8009CE64; // (xprintf, false)
_Putfld = 0x8009CFC0; // size:0x4BC (xprintf, true)
osDpSetNextBuffer = 0x8009D480; // size:0x98 (dpsetnextbuf, true)
__osGetCause = 0x8009D520; // (initialize, false)
__osGetSR = 0x8009D530; // (initialize, false)
__osSetCompare = 0x8009D540; // (timerintr, false)
__osSetFpcCsr = 0x8009D550; // (initialize, false)
__osSetSR = 0x8009D560; // (initialize, false)
__rmonSendFault = 0x8009D570; // size:0x5C (rmonsio, true)
__rmonIOflush = 0x8009D5CC; // size:0x3C (rmonsio, true)
__rmonIOputw = 0x8009D608; // size:0x5C (rmonsio, true)
__rmonIOhandler = 0x8009D664; // size:0xB0 (rmonsio, true)
__osSpDeviceBusy = 0x8009D720; // size:0x18 (sp, true)
__osSpSetStatus = 0x8009D740; // size:0x10 (spsetstat, true)
__osSpSetPc = 0x8009D750; // size:0x30 (spsetpc, true)
__osSpRawStartDma = 0x8009D780; // size:0x8C (sprawdma, true)
osSpTaskYield = 0x8009D810; // size:0x1C (sptaskyield, true)
osSpTaskYielded = 0x8009D830; // size:0x4C (sptaskyielded, true)
__osSiRawReadIo = 0x8009D880; // (initialize, false)
__osSiRawWriteIo = 0x8009D8D0; // (initialize, false)
osMapTLBRdb = 0x8009D920; // (initialize, false)
osAckRamromRead = 0x8009D970; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8009D970; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8009D970; // size:0x8 (synfreefx, true)
osUnmapTLBAll = 0x8009D980; // (initialize, false)
osAckRamromRead = 0x8009D9BC; // size:0x8 (ackramromread, true)
osAckRamromWrite = 0x8009D9BC; // size:0x8 (ackramromwrite, true)
alSynFreeFX = 0x8009D9BC; // size:0x8 (synfreefx, true)
__osViInit = 0x8009D9D0; // size:0x104 (vi, true)
__osViGetCurrentContext = 0x8009DAE0; // (vimgr, false)
_Litob = 0x8009DAF0; // size:0x244 (xlitob, true)
_Ldtob = 0x8009DD40; // size:0x440 (xldtob, true)
// = 0x8009E070; // (xldtob, false)
// = 0x8009E0E2; // (xldtob, false)
_Ldunscale = 0x8009E180; // size:0x98 (xldtob, true)
_Genld = 0x8009E218; // size:0x5A0 (xldtob, true)
__osDpDeviceBusy = 0x8009E7C0; // size:0x18 (dp, true)
__rmonExecute = 0x8009E7E0; // size:0x80 (rmoncmds, true)
NotImplemented = 0x8009E860; // size:0x8 (rmoncmds, true)
__rmonWriteWordTo = 0x8009E870; // size:0x40 (rmonmem, true)
__rmonReadWordAt = 0x8009E8B0; // size:0x40 (rmonmem, true)
__rmonMemcpy = 0x8009E8F0; // size:0x30 (rmonmem, true)
__rmonCopyWords = 0x8009E920; // size:0x30 (rmonmem, true)
__rmonReadMem = 0x8009E950; // size:0x170 (rmonmem, true)
__rmonWriteMem = 0x8009EAC0; // size:0x224 (rmonmem, true)
__rmonListProcesses = 0x8009ECE4; // size:0x58 (rmonmem, true)
__rmonLoadProgram = 0x8009ED3C; // size:0x8 (rmonmem, true)
__rmonGetExeName = 0x8009ED44; // size:0xBC (rmonmem, true)
__rmonGetRegionCount = 0x8009EE00; // size:0x54 (rmonmem, true)
__rmonGetRegions = 0x8009EE54; // size:0x188 (rmonmem, true)
__rmonSetFault = 0x8009EFE0; // size:0x3C (rmonmisc, true)
__rmonInit = 0x8009F01C; // size:0xD0 (rmonmisc, true)
__rmonPanic = 0x8009F0EC; // size:0x8 (rmonmisc, true)
__rmonSetComm = 0x8009F0F4; // size:0x38 (rmonmisc, true)
__rmonGetGRegisters = 0x8009F130; // size:0xD8 (rmonregs, true)
__rmonSetGRegisters = 0x8009F208; // size:0xF0 (rmonregs, true)
__rmonGetFRegisters = 0x8009F2F8; // size:0x8C (rmonregs, true)
// = 0x8009F358; // (rmonregs, false)
__rmonSetFRegisters = 0x8009F384; // size:0x8C (rmonregs, true)
rmonGetRcpRegister = 0x8009F410; // size:0xD4 (rmonregs, true)
__rmonGetSRegs = 0x8009F4E4; // size:0x198 (rmonregs, true)
__rmonSetSRegs = 0x8009F67C; // size:0x16C (rmonregs, true)
__rmonGetVRegs = 0x8009F7E8; // size:0x1D8 (rmonregs, true)
__rmonSetVRegs = 0x8009F9C0; // size:0x1B4 (rmonregs, true)
__rmonGetRegisterContents = 0x8009FB74; // size:0x78 (rmonregs, true)
__rmonMaskIdleThreadInts = 0x8009FBF0; // size:0x68 (rmontask, true)
__rmonGetTCB = 0x8009FC58; // size:0x64 (rmontask, true)
__rmonStopUserThreads = 0x8009FCBC; // size:0xE8 (rmontask, true)
__rmonListThreads = 0x8009FDA4; // size:0xFC (rmontask, true)
// = 0x8009FDF4; // (rmontask, false)
__rmonGetThreadStatus = 0x8009FEA0; // size:0x1D8 (rmontask, true)
__rmonThreadStatus = 0x800A0078; // size:0x58 (rmontask, true)
__rmonStopThread = 0x800A00D0; // size:0x1B4 (rmontask, true)
__rmonRunThread = 0x800A0284; // size:0x234 (rmontask, true)
__rmonSendHeader = 0x800A04C0; // size:0x68 (rmonmain, true)
__rmonSendReply = 0x800A0528; // size:0xB8 (rmonmain, true)
__rmonSendData = 0x800A05E0; // size:0xF0 (rmonmain, true)
rmonMain = 0x800A06D0; // size:0x18C (rmonmain, true)
__osSpGetStatus = 0x800A0860; // size:0x10 (spgetstat, true)
__osSpRawReadIo = 0x800A0870; // (rmonmain, false)
__osSpRawWriteIo = 0x800A08C0; // (rmonmem, false)
__osSiDeviceBusy = 0x800A0910; // size:0x18 (si, true)
__osGetActiveQueue = 0x800A0930; // (rmonbrk, false)
ldiv = 0x800A0940; // size:0x84 (ldiv, true)
lldiv = 0x800A09C4; // size:0x134 (ldiv, true)
__rmonRCPrunning = 0x800A0B00; // (rmonregs, false)
__rmonIdleRCP = 0x800A0B24; // (rmontask, false)
__rmonStepRCP = 0x800A0B68; // (rmonregs, false)
__rmonRunRCP = 0x800A0B7C; // (rmontask, false)
__rmonSetBreak = 0x800A0BA0; // size:0x178 (rmonbrk, true)
__rmonListBreak = 0x800A0D18; // size:0x8 (rmonbrk, true)
__rmonClearBreak = 0x800A0D20; // size:0x11C (rmonbrk, true)
// = 0x800A0D95; // (rmonbrk, false)
__rmonGetBranchTarget = 0x800A0E3C; // size:0x180 (rmonbrk, true)
__rmonSetSingleStep = 0x800A0FBC; // size:0x1AC (rmonbrk, true)
// = 0x800A1152; // (rmonbrk, false)
__rmonGetExceptionStatus = 0x800A1168; // size:0x3C (rmonbrk, true)
__rmonHitBreak = 0x800A11A4; // size:0xDC (rmonbrk, true)
__rmonHitSpBreak = 0x800A1280; // size:0x8C (rmonbrk, true)
__rmonHitCpuFault = 0x800A130C; // size:0x2C (rmonbrk, true)
rmonFindFaultedThreads = 0x800A1338; // size:0x1FC (rmonbrk, true)
__divdi3 = 0x800A55F0; // (ldiv, false)
__udivdi3 = 0x800A5760; // (initialize, false)
__umoddi3 = 0x800A5780; // (xlitob, false)
__osPiDevMgr = 0x800B45E0; // (epidma, false)
// = 0x800B45E0; // (pimgr, false)
__osPiTable = 0x800B45FC; // (cartrominit, false)
__osCurrentHandle = 0x800B4600; // (epirawdma, false)
// = 0x800B4610; // (cartrominit, false)
__osPiAccessQueueEnabled = 0x800B4620; // (pimgr, false)
// = 0x800B4630; // (aisetnextbuf, false)
// = 0x800B4640; // (drvrnew, false)
// = 0x800B47D0; // (env, false)
alGlobals = 0x800B48F0; // (env, false)
// = 0x800B48F0; // (sl, false)
alGlobals = 0x800B48F0; // (synthesizer, false)
// = 0x800B4900; // (controller, false)
// = 0x800B4910; // (rotate, false)
// = 0x800B4920; // (us2dex_emu, false)
__osRdb_IP6_Empty = 0x800B4950; // (exceptasm, false)
// = 0x800B4950; // (rdbsend, false)
// = 0x800B4960; // (syncprintf, false)
// = 0x800B4970; // (seteventmesg, false)
// = 0x800B4980; // (sched, false)
__osThreadTail = 0x800B49A0; // (createmesgqueue, false)
__osRunQueue = 0x800B49A8; // (exceptasm, false)
__osActiveQueue = 0x800B49AC; // (createthread, false)
__osRunningThread = 0x800B49B0; // (destroythread, false)
__osFaultedThread = 0x800B49B4; // (exceptasm, false)
__osTimerList = 0x800B49C0; // (settimer, false)
// = 0x800B49C0; // (timerintr, false)
// = 0x800B49D0; // (vimgr, false)
__additional_scanline = 0x800B49EC; // (viswapcontext, false)
osViModeTable = 0x800B49F0; // (sched, false)
osViModeNtscLan1 = 0x800B5C10; // (vi, false)
osViModePalLan1 = 0x800B6070; // (vi, false)
osViModeMpalLan1 = 0x800B64D0; // (vi, false)
// = 0x800B6CF0; // (initialize, false)
osViClock = 0x800B6CF8; // (aisetfreq, false)
__osShutdown = 0x800B6CFC; // (exceptasm, false)
__OSGlobalIntMask = 0x800B6D00; // (exceptasm, false)
// = 0x800B6D10; // (exceptasm, false)
// = 0x800B6D50; // (kdebugserver, false)
// = 0x800B6D60; // (readhost, false)
// = 0x800B6D70; // (xprintf, false)
// = 0x800B6DC0; // (vi, false)
__osViCurr = 0x800B6E20; // (viswapcontext, false)
__osViNext = 0x800B6E24; // (viblack, false)
// = 0x800B6E30; // (xlitob, false)
// = 0x800B6E60; // (rmoncmds, false)
// = 0x800B6F40; // (rmonmain, false)
__osRcpImTable = 0x800BD1C0; // (exceptasm, false)
// = 0x800BD1C0; // (setintmask, false)
// = 0x800BD240; // (devmgr, false)
// = 0x800BD260; // (aisetfreq, false)
// = 0x800BD270; // (drvrnew, false)
// = 0x800BD2B0; // (env, false)
// = 0x800BD3A0; // (resample, false)
// = 0x800BD3D0; // (reverb, false)
// = 0x800BD420; // (synthesizer, false)
// = 0x800BD440; // (lookat, false)
// = 0x800BD460; // (perspective, false)
// = 0x800BD4A0; // (sinf, false)
// = 0x800BD500; // (sched, false)
// = 0x800BD520; // (viswapcontext, false)
// = 0x800BD530; // (exceptasm, false)
__libm_qnan_f = 0x800BD5A0; // (cosf, false)
// = 0x800BD5B0; // (cosf, false)
// = 0x800BD610; // (xprintf, false)
// = 0x800BD790; // (xldtob, false)
// = 0x800BD800; // (rmonmem, false)
// = 0x800BD810; // (rmonbrk, false)
// = 0x80186020; // (pimgr, false)
// = 0x801877F0; // (us2dex_emu, false)
// = 0x80187810; // (sptask, false)
// = 0x80187860; // (vimgr, false)
// = 0x80188A80; // (kdebugserver, false)
// = 0x80188A90; // (readhost, false)
// = 0x80188AB0; // (rmonsio, false)
// = 0x80188AD0; // (rmonmisc, false)
// = 0x8018CCE0; // (rmonregs, false)
// = 0x8018CD00; // (rmonmain, false)
// = 0x8018D180; // (rmonbrk, false)
__osRdb_DbgRead_Buf = 0x8018FF24; // size:0x4 (rmonsio, true)
__osBaseCounter = 0x8019E3E8; // size:0x4 (timerintr, true)
__kmc_pt_mode = 0x8019E3FC; // size:0x4 (initialize, true)
__osThreadSave = 0x8019E400; // (exceptasm, false)
__osProfileOverflowBin = 0x8019E5B4; // size:0x4 (timerintr, true)
__osContPifRam = 0x8019E5F0; // size:0x40 (controller, true)
__osRdb_IP6_CurWrite = 0x8019E670; // size:0x4 (initrdb, true)
__Dom2SpeedParam = 0x8019E6D8; // (initialize, false)
__osProfileList = 0x8019E74C; // size:0x4 (timerintr, true)
__osViIntrCount = 0x801A09D8; // size:0x4 (timerintr, true)
__osRdb_Read_Data_Ct = 0x801B9A5C; // size:0x4 (readhost, true)
__osRdb_IP6_Size = 0x801B9C20; // size:0x4 (initrdb, true)
__osMaxControllers = 0x801B9C90; // size:0x1 (controller, true)
__osCurrentTime = 0x801B9CC8; // size:0x8 (timerintr, true)
__CartRomHandle = 0x801B9CD8; // size:0x74 (cartrominit, true)
__osPiAccessQueue = 0x801B9E60; // (pimgr, false)
__Dom1SpeedParam = 0x801B9EB0; // (initialize, false)
__rmonUtilityBuffer = 0x801B9FF8; // size:0x100 (rmonmem, true)
rmonRdbReadBuf = 0x801BA150; // size:0x800 (rmonsio, true)
__osContLastCmd = 0x801BA95A; // size:0x1 (controller, true)
__osEepromTimerMsg = 0x801EC9D0; // size:0x4 (controller, true)
__osRdb_IP6_CurSend = 0x801ECA30; // size:0x4 (initrdb, true)
__osTimerCounter = 0x801ECA4C; // size:0x4 (timerintr, true)
__osProfileListEnd = 0x801ED80C; // size:0x4 (timerintr, true)
__osProfTimerQ = 0x801ED818; // size:0x18 (timerintr, true)
__osRdb_Read_Data_Buf = 0x801EDAE8; // size:0x4 (readhost, true)
__osEventStateTab = 0x801EE700; // size:0xB8 (seteventmesg, true)
__osRdb_IP6_Data = 0x801EE7E8; // size:0x4 (initrdb, true)
__osEepromTimerQ = 0x801EE810; // size:0x18 (controller, true)
__rmonRcpAtBreak = 0x801EEC50; // size:0x1 (rmonbrk, true)
__rmonMQ = 0x801EEC58; // size:0x18 (rmonmisc, true)
__osRdb_IP6_Ct = 0x801EEC70; // size:0x4 (initrdb, true)
