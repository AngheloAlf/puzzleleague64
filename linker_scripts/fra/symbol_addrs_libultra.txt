// .text

osSetIntMask = 0x8008FBA0; // type:func
osCreatePiManager = 0x8008FC40; // type:func
ramromMain = 0x8008FE74; // type:func
__osEPiRawStartDma = 0x8008FF80; // type:func
func_80090360_fra = 0x80090360; // type:func
func_800903F0_fra = 0x800903F0; // type:func
osEPiStartDma = 0x80090480; // type:func
osEPiLinkHandle = 0x800906C0; // type:func
osCartRomInit = 0x80090720; // type:func
__osDevMgrMain = 0x80090910; // type:func
__osPiCreateAccessQueue = 0x80090E50; // type:func
__osPiGetAccess = 0x80090EAC; // type:func
__osPiRelAccess = 0x80090EFC; // type:func
osPiStartDma = 0x80090F40; // type:func
osAiGetLength = 0x80091180; // type:func
osAiGetStatus = 0x800911B0; // type:func
osAiSetFrequency = 0x800911E0; // type:func
osAiSetNextBuffer = 0x80091490; // type:func
_init_lpfilter = 0x800915A0; // type:func
alFxNew = 0x8009170C; // type:func
alEnvmixerNew = 0x80091D08; // type:func
alLoadNew = 0x80091E30; // type:func
alResampleNew = 0x80091F04; // type:func
alAuxBusNew = 0x80091FBC; // type:func
alMainBusNew = 0x80092028; // type:func
alSaveNew = 0x80092094; // type:func
alAdpcmPull = 0x800920F0; // type:func
alRaw16Pull = 0x80092834; // type:func
alLoadParam = 0x80092EE4; // type:func
_decodeChunk = 0x80093254; // type:func
alAuxBusPull = 0x80093470; // type:func
alAuxBusParam = 0x800935B0; // type:func
alEnvmixerPull = 0x80093640; // type:func
alEnvmixerParam = 0x80093EBC; // type:func
_pullSubFrame = 0x80094070; // type:func
_frexpf = 0x80094528; // type:func
_ldexpf = 0x80094688; // type:func
_getRate = 0x800946E4; // type:func
_getVol = 0x8009499C; // type:func
alFilterNew = 0x80094AE0; // type:func
alMainBusPull = 0x80094B50; // type:func
alMainBusParam = 0x80094D20; // type:func
alResamplePull = 0x80094DB0; // type:func
alResampleParam = 0x8009508C; // type:func
alFxPull = 0x80095220; // type:func
alFxParam = 0x800957C0; // type:func
alFxParamHdl = 0x80095814; // type:func
_loadOutputBuffer = 0x80095B70; // type:func
_loadBuffer = 0x80095E78; // type:func
_saveBuffer = 0x80096120; // type:func
_filterBuffer = 0x8009639C; // type:func
_doModFunc = 0x800964C0; // type:func
alSavePull = 0x800965D0; // type:func
alSaveParam = 0x80096738; // type:func
alInit = 0x800967D0; // type:func
alClose = 0x80096828; // type:func
alLink = 0x80096870; // type:func
alUnlink = 0x800968DC; // type:func
alHeapInit = 0x80096950; // type:func
alHeapDBAlloc = 0x800969F0; // type:func
alCopy = 0x80096B60; // type:func
alSynNew = 0x80096BF0; // type:func
alAudioFrame = 0x80097034; // type:func
__allocParam = 0x8009728C; // type:func
__freeParam = 0x800972F8; // type:func
_collectPVoices = 0x80097340; // type:func
_freePVoice = 0x800973AC; // type:func
_timeToSamplesNoRound = 0x800973F4; // type:func
_timeToSamples = 0x8009746C; // type:func
__nextSampleTime = 0x800974B4; // type:func
alSynDelete = 0x800975B0; // type:func
alSynAddPlayer = 0x800975E0; // type:func
alSynRemovePlayer = 0x80097650; // type:func
alSynFreeVoice = 0x80097730; // type:func
alSynAllocVoice = 0x80097830; // type:func
_allocatePVoice = 0x80097A5C; // type:func
alSynStopVoice = 0x80097BB0; // type:func
alSynStartVoice = 0x80097C80; // type:func
alSynSetPitch = 0x80097D70; // type:func
alSynSetVol = 0x80097E50; // type:func
alSynSetFXMix = 0x80097F50; // type:func
alSynSetPan = 0x80098050; // type:func
alSynAllocFX = 0x80098130; // type:func
osInvalDCache = 0x80098290; // type:func
osWritebackDCache = 0x80098340; // type:func
osWritebackDCacheAll = 0x800983C0; // type:func
osContStartQuery = 0x800983F0; // type:func
osContGetQuery = 0x80098484; // type:func
osContStartReadData = 0x800984C0; // type:func
osContGetReadData = 0x8009855C; // type:func
__osPackReadData = 0x80098658; // type:func
osContReset = 0x80098790; // type:func
__osPackResetData = 0x8009889C; // type:func
osContInit = 0x80098920; // type:func
__osContGetInitData = 0x80098ADC; // type:func
__osPackRequestData = 0x80098C04; // type:func
osContSetCh = 0x80098D50; // type:func
osVirtualToPhysical = 0x80098DD0; // type:func
__assert = 0x80098EB0; // type:func
guLookAtF = 0x80098F00; // type:func
guLookAt = 0x8009931C; // type:func
guMtxF2L = 0x800993A0; // type:func
guMtxL2F = 0x80099510; // type:func
guMtxIdentF = 0x80099698; // type:func
guMtxIdent = 0x80099784; // type:func
guPerspectiveF = 0x800997C0; // type:func
guPerspective = 0x80099A80; // type:func
guRotateF = 0x80099AF0; // type:func
guRotate = 0x80099D3C; // type:func
__sinf = 0x80099DA0; // type:func
guTranslateF = 0x8009A050; // type:func
guTranslate = 0x8009A0BC; // type:func
guS2DInitBg = 0x8009A110; // type:func
guS2DEmuSetScissor = 0x8009A330; // type:func
tmemLoad_B = 0x8009A3B4; // type:func
tmemLoad_A = 0x8009A4B0; // type:func
tmemLoad = 0x8009A59C; // type:func
guS2DEmuBgRect1Cyc = 0x8009AA34; // type:func
__osRdbSend = 0x8009B7D0; // type:func
osInitRdb = 0x8009BAC0; // type:func
bcopy = 0x8009BB70; // type:func
bzero = 0x8009BE90; // type:func
strchr = 0x8009BF30; // type:func
strlen = 0x8009BFAC; // type:func
memcpy = 0x8009C014; // type:func
sprintf = 0x8009C0B0; // type:func
proutSprintf = 0x8009C130; // type:func
proutSyncPrintf = 0x8009C180; // type:func
rmonPutchar = 0x8009C210; // type:func
kmc_proutSyncPrintf = 0x8009C298; // type:func
osSyncPrintf = 0x8009C4F0; // type:func
rmonPrintf = 0x8009C57C; // type:func
osCreateMesgQueue = 0x8009C5F0; // type:func
osJamMesg = 0x8009C690; // type:func
osRecvMesg = 0x8009C850; // type:func
osSendMesg = 0x8009CA00; // type:func
osSetEventMesg = 0x8009CBB0; // type:func
osGetCount = 0x8009CCB0; // type:func
_VirtualToPhysicalTask = 0x8009CCC0; // type:func
osSpTaskLoad = 0x8009CE08; // type:func
osSpTaskStartGo = 0x8009D094; // type:func
osCreateScheduler = 0x8009D0F0; // type:func
osScAddClient = 0x8009D2B4; // type:func
osScRemoveClient = 0x8009D320; // type:func
osScGetCmdQ = 0x8009D3E4; // type:func
__scMain = 0x8009D414; // type:func
__scHandleRetrace = 0x8009D54C; // type:func
__scHandleRSP = 0x8009D6CC; // type:func
__scHandleRDP = 0x8009D8D0; // type:func
__scTaskReady = 0x8009DA1C; // type:func
__scTaskComplete = 0x8009DA90; // type:func
__scAppendList = 0x8009DBF0; // type:func
__scExec = 0x8009DD24; // type:func
__scYield = 0x8009DED4; // type:func
__scSchedule = 0x8009DF3C; // type:func
__osSiRawStartDma = 0x8009E2D0; // type:func
__osSiCreateAccessQueue = 0x8009E3D0; // type:func
__osSiGetAccess = 0x8009E42C; // type:func
__osSiRelAccess = 0x8009E47C; // type:func
osCreateThread = 0x8009E4C0; // type:func
osDestroyThread = 0x8009E690; // type:func
osGetThreadPri = 0x8009E7B0; // type:func
osSetThreadPri = 0x8009E800; // type:func
osStartThread = 0x8009E950; // type:func
osStopThread = 0x8009EAF0; // type:func
__osDequeueThread = 0x8009EBE0; // type:func
osYieldThread = 0x8009EC40; // type:func
osGetTime = 0x8009ECA0; // type:func
osSetTimer = 0x8009ED80; // type:func
__osTimerServicesInit = 0x8009EE80; // type:func
__osTimerInterrupt = 0x8009EF2C; // type:func
__osSetTimerIntr = 0x8009F254; // type:func
__osInsertTimer = 0x8009F2D4; // type:func
__osProbeTLB = 0x8009F480; // type:func
osViGetCurrentFramebuffer = 0x8009F540; // type:func
osViGetNextFramebuffer = 0x8009F5C0; // type:func
osViGetCurrentLine = 0x8009F640; // type:func
osCreateViManager = 0x8009F670; // type:func
viMgrMain = 0x8009F884; // type:func
osViSetEvent = 0x8009FA90; // type:func
osViSetMode = 0x8009FB60; // type:func
osViSetSpecialFeatures = 0x8009FC30; // type:func
osViSetYScale = 0x8009FEC0; // type:func
osViSwapBuffer = 0x800A0000; // type:func
__osViSwapContext = 0x800A00E0; // type:func
osViBlack = 0x800A0450; // type:func
func_800A04F0_fra = 0x800A04F0; // type:func
osAfterPreNMI = 0x800A0550; // type:func
osInitialize = 0x800A0590; // type:func
ptstart = 0x800A0A64; // type:func
createSpeedParam = 0x800A0A80; // type:func
__osError = 0x800A0B40; // type:func
__osDefaultHandler = 0x800A0B90; // type:func
func_800A2050_usa = 0x800A0C20; // type:func
func_800A20E0_usa = 0x800A0CB0; // type:func
func_800A2168_usa = 0x800A0D38; // type:func
kmcErrorHandler = 0x800A0F90; // type:func
__osExceptionPreamble = 0x800A1060; // type:func
__ptExceptionPreamble = 0x800A1070; // type:func
__ptException = 0x800A1090; // type:func
send_mesg = 0x800A1A74; // type:func
__osEnqueueAndYield = 0x800A1B64; // type:func
__osEnqueueThread = 0x800A1C6C; // type:func
__osPopThread = 0x800A1CB4; // type:func
__osDispatchThread = 0x800A1CC4; // type:func
__osCleanupThread = 0x800A1E40; // type:func
__osDisableInt = 0x800A1E50; // type:func
__osRestoreInt = 0x800A1EC0; // type:func
__osSetGlobalIntMask = 0x800A1EE0; // type:func
__osResetGlobalIntMask = 0x800A1F40; // type:func
__osPiRawStartDma = 0x800A1FB0; // type:func
osPiGetCmdQueue = 0x800A2190; // type:func
__osEPiRawReadIo = 0x800A21E0; // type:func
__osEPiRawWriteIo = 0x800A24C0; // type:func
__osAiDeviceBusy = 0x800A2770; // type:func
osInvalICache = 0x800A27C0; // type:func
string_to_u32 = 0x800A2840; // type:func
send_packet = 0x800A28C8; // type:func
clear_IP6 = 0x800A298C; // type:func
send = 0x800A2A04; // type:func
kdebugserver = 0x800A2AF4; // type:func
sqrtf = 0x800A2C10; // type:func
__cosf = 0x800A2C20; // type:func
guNormalize = 0x800A2E60; // type:func
osReadHost = 0x800A2F40; // type:func
_Printf = 0x800A3020; // type:func
_Putfld = 0x800A3930; // type:func
osCreateLog = 0x800A4220; // type:func
osLogEvent = 0x800A428C; // type:func
osFlushLog = 0x800A4318; // type:func
__osLogWrite = 0x800A4530; // type:func
osDpSetNextBuffer = 0x800A4730; // type:func
__osGetCause = 0x800A4860; // type:func
__osGetSR = 0x800A4870; // type:func
__osSetCompare = 0x800A4880; // type:func
__osSetFpcCsr = 0x800A4890; // type:func
__osSetSR = 0x800A48A0; // type:func
__rmonSendFault = 0x800A48B0; // type:func
__rmonIOflush = 0x800A4938; // type:func
__rmonIOputw = 0x800A4998; // type:func
__rmonIOhandler = 0x800A4A1C; // type:func
__osSpDeviceBusy = 0x800A4B00; // type:func
__osSpSetStatus = 0x800A4B50; // type:func
__osSpSetPc = 0x800A4B80; // type:func
__osSpRawStartDma = 0x800A4BD0; // type:func
osSpTaskYield = 0x800A4D00; // type:func
osSpTaskYielded = 0x800A4D30; // type:func
__osSiRawReadIo = 0x800A4DC0; // type:func
__osSiRawWriteIo = 0x800A4E80; // type:func
osMapTLBRdb = 0x800A4F10; // type:func
osUnmapTLBAll = 0x800A4F70; // type:func
__osViInit = 0x800A4FC0; // type:func
__osViGetCurrentContext = 0x800A5120; // type:func
_Litob = 0x800A5150; // type:func
_Ldtob = 0x800A5500; // type:func
_Ldunscale = 0x800A5C08; // type:func
_Genld = 0x800A5D50; // type:func
__osDpDeviceBusy = 0x800A6680; // type:func
NotImplemented = 0x800A66D0; // type:func
__rmonExecute = 0x800A66F8; // type:func
__rmonWriteWordTo = 0x800A67B0; // type:func
__rmonReadWordAt = 0x800A6800; // type:func
__rmonMemcpy = 0x800A6874; // type:func
__rmonCopyWords = 0x800A68D8; // type:func
strcpy = 0x800A693C; // type:func
__rmonReadMem = 0x800A699C; // type:func
__rmonWriteMem = 0x800A6BC8; // type:func
__rmonListProcesses = 0x800A6E20; // type:func
__rmonLoadProgram = 0x800A6EAC; // type:func
__rmonGetExeName = 0x800A6ED4; // type:func
__rmonGetRegionCount = 0x800A6F9C; // type:func
__rmonGetRegions = 0x800A7028; // type:func
__rmonSetFault = 0x800A7220; // type:func
__rmonInit = 0x800A7288; // type:func
__rmonPanic = 0x800A736C; // type:func
__rmonSetComm = 0x800A7394; // type:func
LoadStoreSU = 0x800A73F0; // type:func
LoadStoreVU = 0x800A7480; // type:func
SetUpForRCPop = 0x800A7528; // type:func
CleanupFromRCPop = 0x800A75CC; // type:func
__rmonGetGRegisters = 0x800A7670; // type:func
__rmonSetGRegisters = 0x800A77F0; // type:func
__rmonGetFRegisters = 0x800A7974; // type:func
__rmonSetFRegisters = 0x800A7A38; // type:func
rmonGetRcpRegister = 0x800A7AFC; // type:func
__rmonGetSRegs = 0x800A7B70; // type:func
__rmonSetSRegs = 0x800A7CD4; // type:func
__rmonGetVRegs = 0x800A7E00; // type:func
__rmonSetVRegs = 0x800A7F3C; // type:func
__rmonGetRegisterContents = 0x800A801C; // type:func
__rmonMaskIdleThreadInts = 0x800A8130; // type:func
__rmonGetTCB = 0x800A81B4; // type:func
__rmonStopUserThreads = 0x800A8244; // type:func
__rmonListThreads = 0x800A8384; // type:func
__rmonGetThreadStatus = 0x800A84E4; // type:func
__rmonThreadStatus = 0x800A87F4; // type:func
__rmonStopThread = 0x800A887C; // type:func
__rmonRunThread = 0x800A89F4; // type:func
__rmonSendHeader = 0x800A8CD0; // type:func
__rmonSendReply = 0x800A8D78; // type:func
__rmonSendData = 0x800A8E28; // type:func
rmonMain = 0x800A8F80; // type:func
__osSpGetStatus = 0x800A9120; // type:func
__osSpRawReadIo = 0x800A9150; // type:func
__osSpRawWriteIo = 0x800A9210; // type:func
__osSiDeviceBusy = 0x800A92A0; // type:func
__osGetActiveQueue = 0x800A92F0; // type:func
ldiv = 0x800A9320; // type:func
lldiv = 0x800A93EC; // type:func
__rmonRCPrunning = 0x800A9580; // type:func
__rmonIdleRCP = 0x800A95A4; // type:func
__rmonStepRCP = 0x800A95E8; // type:func
__rmonRunRCP = 0x800A95FC; // type:func
SetTempBreakpoint = 0x800A9620; // type:func
ClearTempBreakpoint = 0x800A96E4; // type:func
__rmonSetBreak = 0x800A97F8; // type:func
__rmonListBreak = 0x800A99F8; // type:func
__rmonClearBreak = 0x800A9A20; // type:func
__rmonGetBranchTarget = 0x800A9BA0; // type:func
IsJump = 0x800A9E34; // type:func
__rmonSetSingleStep = 0x800A9F00; // type:func
__rmonGetExceptionStatus = 0x800A9FEC; // type:func
rmonSendBreakMessage = 0x800AA06C; // type:func
__rmonHitBreak = 0x800AA12C; // type:func
__rmonHitSpBreak = 0x800AA164; // type:func
__rmonHitCpuFault = 0x800AA1D4; // type:func
rmonFindFaultedThreads = 0x800AA20C; // type:func


// .data


__osPiDevMgr = 0x800BD3B0; //
D_800BE654_usa = 0x800BD3B4; //
D_800BE658_usa = 0x800BD3B8; //
D_800BE65C_usa = 0x800BD3BC; //
D_800BE660_usa = 0x800BD3C0; //
D_800BE664_usa = 0x800BD3C4; //
D_800BE668_usa = 0x800BD3C8; //
__osPiTable = 0x800BD3CC; //
__osCurrentHandle = 0x800BD3D0; //
D_800BE680_usa = 0x800BD3E0; //
__osPiAccessQueueEnabled = 0x800BD3F0; //
D_800BE6A0_usa = 0x800BD400; //
D_800BE6B0_usa = 0x800BD410; //
D_800BE718_usa = 0x800BD478; //
D_800BE7A0_usa = 0x800BD500; //
D_800BE7C8_usa = 0x800BD528; //
D_800BE7F0_usa = 0x800BD550; //
D_800BE818_usa = 0x800BD578; //
D_800BE840_usa = 0x800BD5A0; // type:s16
alGlobals = 0x800BD6C0; //
__osContinitialized = 0x800BD6D0; //
FLT_800BE980 = 0x800BD6E0; // type:f32
D_800BE990_usa = 0x800BD6F0; // type:s16
D_800BE992_usa = 0x800BD6F2; // type:s16
D_800BE994_usa = 0x800BD6F4; // type:s16
D_800BE996_usa = 0x800BD6F6; // type:s16
D_800BE998_usa = 0x800BD6F8; // type:s8
D_800BE99C_usa = 0x800BD6FC; // type:u16
D_800BE9A8_usa = 0x800BD708; // type:u16
D_800BE9B0_usa = 0x800BD710; // type:u16
__osRdb_IP6_Empty = 0x800BD720; //
D_800BE9D0_usa = 0x800BD730; //
D_800BE9D4_usa = 0x800BD734; //
D_800BE9D8_usa = 0x800BD738; //
D_800BE9DC_usa = 0x800BD73C; //
D_800BE9E0_usa = 0x800BD740; //
D_800BE9F4_usa = 0x800BD754; //
D_800BE9F8_usa = 0x800BD758; //
D_800BE9FC_usa = 0x800BD75C; //
D_800BD760_fra = 0x800BD760; //
__osThreadTail = 0x800BD770; //
__osRunQueue = 0x800BD778; //
__osActiveQueue = 0x800BD77C; //
__osRunningThread = 0x800BD780; //
__osFaultedThread = 0x800BD784; //
__osTimerList = 0x800BD790; //
__osViDevMgr = 0x800BD7A0; //
D_800BD7A4_fra = 0x800BD7A4; //
D_800BD7A8_fra = 0x800BD7A8; //
D_800BD7AC_fra = 0x800BD7AC; //
D_800BD7B0_fra = 0x800BD7B0; //
D_800BD7B4_fra = 0x800BD7B4; //
D_800BD7B8_fra = 0x800BD7B8; //
__additional_scanline = 0x800BD7BC; //
osViModeTable = 0x800BD7C0; //
osViModeNtscLan1 = 0x800BE9E0; //
osViModePalLan1 = 0x800BEE40; //
osViModeMpalLan1 = 0x800BF2A0; //
D_800C0D60_usa = 0x800BFAC0; //
D_800C0D64_usa = 0x800BFAC4; //
osViClock = 0x800BFAC8; //
__osShutdown = 0x800BFACC; //
__OSGlobalIntMask = 0x800BFAD0; //
errorLog = 0x800BFAE0; //
__osErrorHandler = 0x800BFAF4; //
D_800C0DA0_usa = 0x800BFB00; //
D_800C0DA4_usa = 0x800BFB04; //
D_800C0DA8_usa = 0x800BFB08; //
D_800C0DAC_usa = 0x800BFB0C; //
D_800BFB10_fra = 0x800BFB10; //
D_800C0DB4_usa = 0x800BFB14; //
__kmcErrorHandler = 0x800BFD38; //
D_800C0FE0_usa = 0x800BFD40; //
D_800C1008_usa = 0x800BFD68; //
D_800C1010_usa = 0x800BFD70; //
D_800C1014_usa = 0x800BFD74; //
D_800C1018_usa = 0x800BFD78; //
D_800C1020_usa = 0x800BFD80; //
D_800C1030_usa = 0x800BFD90; //
D_800C1040_usa = 0x800BFDA0; //
D_800C1064_usa = 0x800BFDC4; //
D_800C1090_usa = 0x800BFDF0; //
D_800C1094_usa = 0x800BFDF4; //
D_800C10A0_usa = 0x800BFE00; //
D_800C10D0_usa = 0x800BFE30; //
__osViCurr = 0x800BFE60; //
__osViNext = 0x800BFE64; //
D_800C1110_usa = 0x800BFE70; //
D_800C1124_usa = 0x800BFE84; //
D_800C1140_usa = 0x800BFEA0; //
D_800C1220_usa = 0x800BFF80; //


// .rodata


__osRcpImTable = 0x800C6200; // type:u16
jtbl_800C7970_usa = 0x800C6280; // type:jtbl
DBL_800C7990 = 0x800C62A0; // type:f64
DBL_800C79A0 = 0x800C62B0; // type:f64
DBL_800C79A8 = 0x800C62B8; // type:f64
RO_800C79B0_usa = 0x800C62C0; //
jtbl_800C79C0_usa = 0x800C62D0; // type:jtbl
DBL_800C79D8 = 0x800C62E8; // type:f64
DBL_800C79E0 = 0x800C62F0; // type:f64
RO_800C79F0_usa = 0x800C6300; //
RO_800C79F4_usa = 0x800C6304; //
jtbl_800C7A00_usa = 0x800C6310; // type:jtbl
DBL_800C7A48 = 0x800C6358; // type:f64
DBL_800C7A50 = 0x800C6360; // type:f64
DBL_800C7A58 = 0x800C6368; // type:f64
RO_800C7A60_usa = 0x800C6370; //
DBL_800C7AA0 = 0x800C63B0; // type:f64
DBL_800C7AA8 = 0x800C63B8; // type:f64
DBL_800C7AB0 = 0x800C63C0; // type:f64
DBL_800C7AB8 = 0x800C63C8; // type:f64
DBL_800C7AC0 = 0x800C63D0; // type:f64
DBL_800C7AC8 = 0x800C63D8; // type:f64
DBL_800C7AD0 = 0x800C63E0; // type:f64
DBL_800C7AD8 = 0x800C63E8; // type:f64
DBL_800C7AE0 = 0x800C63F0; // type:f64
DBL_800C7AF0 = 0x800C6400; // type:f64
jtbl_800C7AF8_usa = 0x800C6408; // type:jtbl
STR_800C7B20 = 0x800C6430; // type:asciz
STR_800C7B24 = 0x800C6434; // type:asciz
jtbl_800C7B30_usa = 0x800C6440; // type:jtbl
DBL_800C7B50 = 0x800C6460; // type:f64
DBL_800C7B58 = 0x800C6468; // type:f64
DBL_800C7B60 = 0x800C6470; // type:f64
DBL_800C7B68 = 0x800C6478; // type:f64
DBL_800C7B70 = 0x800C6480; // type:f64
DBL_800C7B78 = 0x800C6488; // type:f64
STR_800C7B80 = 0x800C6490; // type:asciz
STR_800C7B84 = 0x800C6494; // type:asciz
STR_800C7B8C = 0x800C649C; // type:asciz
RO_800C7BA0_usa = 0x800C64B0; //
DBL_800C7BB0 = 0x800C64C0; // type:f64
DBL_800C7BB8 = 0x800C64C8; // type:f64
STR_800C7BC0 = 0x800C64D0; // type:asciz
STR_800C7BD0 = 0x800C64E0; // type:asciz
DBL_800C7BF0 = 0x800C6500; // type:f64
DBL_800C7BF8 = 0x800C6508; // type:f64
DBL_800C7C00 = 0x800C6510; // type:f64
DBL_800C7C10 = 0x800C6520; // type:f64
DBL_800C7C18 = 0x800C6528; // type:f64
DBL_800C7C20 = 0x800C6530; // type:f64
DBL_800C7C28 = 0x800C6538; // type:f64
DBL_800C7C38 = 0x800C6548; // type:f64
DBL_800C7C40 = 0x800C6550; // type:f64
DBL_800C7C48 = 0x800C6558; // type:f64
DBL_800C7C50 = 0x800C6560; // type:f64
DBL_800C7C58 = 0x800C6568; // type:f64
DBL_800C7C60 = 0x800C6570; // type:f64
DBL_800C7C68 = 0x800C6578; // type:f64
FLT_800C7C70 = 0x800C6580; // type:f32
DBL_800C7C78 = 0x800C6588; // type:f64
DBL_800C7C80 = 0x800C6590; // type:f64
RO_800C7C90_usa = 0x800C65A0; //
RO_800C7C94_usa = 0x800C65A4; //
jtbl_800C7CA0_usa = 0x800C65B0; // type:jtbl
STR_800C7CC0 = 0x800C65D0; // type:asciz
STR_800C7CC4 = 0x800C65D4; // type:asciz
STR_800C7CD0 = 0x800C65E0; // type:asciz
STR_800C7CD4 = 0x800C65E4; // type:asciz
STR_800C7CE4 = 0x800C65F4; // type:asciz
STR_800C7CE8 = 0x800C65F8; // type:asciz
STR_800C7CF4 = 0x800C6604; // type:asciz
STR_800C7CF8 = 0x800C6608; // type:asciz
DBL_800C7D10 = 0x800C6620; // type:f64
RO_STR_800C6630_fra = 0x800C6630; // type:asciz
RO_STR_800C6660_fra = 0x800C6660; // type:asciz
RO_STR_800C66A0_fra = 0x800C66A0; // type:asciz
RO_STR_800C66EC_fra = 0x800C66EC; // type:asciz
RO_STR_800C6734_fra = 0x800C6734; // type:asciz
RO_STR_800C6760_fra = 0x800C6760; // type:asciz
RO_STR_800C67A8_fra = 0x800C67A8; // type:asciz
RO_STR_800C67E4_fra = 0x800C67E4; // type:asciz
RO_STR_800C681C_fra = 0x800C681C; // type:asciz
RO_STR_800C684C_fra = 0x800C684C; // type:asciz
RO_STR_800C6868_fra = 0x800C6868; // type:asciz
RO_STR_800C6890_fra = 0x800C6890; // type:asciz
RO_STR_800C68B4_fra = 0x800C68B4; // type:asciz
RO_STR_800C68DC_fra = 0x800C68DC; // type:asciz
RO_STR_800C6908_fra = 0x800C6908; // type:asciz
RO_STR_800C694C_fra = 0x800C694C; // type:asciz
RO_STR_800C6980_fra = 0x800C6980; // type:asciz
RO_STR_800C69B0_fra = 0x800C69B0; // type:asciz
RO_STR_800C69E4_fra = 0x800C69E4; // type:asciz
RO_STR_800C6A10_fra = 0x800C6A10; // type:asciz
RO_STR_800C6A38_fra = 0x800C6A38; // type:asciz
RO_STR_800C6A64_fra = 0x800C6A64; // type:asciz
RO_STR_800C6A88_fra = 0x800C6A88; // type:asciz
RO_STR_800C6AAC_fra = 0x800C6AAC; // type:asciz
RO_STR_800C6AE4_fra = 0x800C6AE4; // type:asciz
RO_STR_800C6B1C_fra = 0x800C6B1C; // type:asciz
RO_STR_800C6B50_fra = 0x800C6B50; // type:asciz
RO_STR_800C6B88_fra = 0x800C6B88; // type:asciz
RO_STR_800C6BC4_fra = 0x800C6BC4; // type:asciz
RO_STR_800C6C08_fra = 0x800C6C08; // type:asciz
RO_STR_800C6C28_fra = 0x800C6C28; // type:asciz
RO_STR_800C6C48_fra = 0x800C6C48; // type:asciz
RO_STR_800C6C7C_fra = 0x800C6C7C; // type:asciz
RO_STR_800C6CAC_fra = 0x800C6CAC; // type:asciz
RO_STR_800C6CD0_fra = 0x800C6CD0; // type:asciz
RO_STR_800C6CF0_fra = 0x800C6CF0; // type:asciz
RO_STR_800C6D10_fra = 0x800C6D10; // type:asciz
RO_STR_800C6D4C_fra = 0x800C6D4C; // type:asciz
RO_STR_800C6D88_fra = 0x800C6D88; // type:asciz
RO_STR_800C6DC4_fra = 0x800C6DC4; // type:asciz
RO_STR_800C6E00_fra = 0x800C6E00; // type:asciz
RO_STR_800C6E3C_fra = 0x800C6E3C; // type:asciz
RO_STR_800C6E70_fra = 0x800C6E70; // type:asciz
RO_STR_800C6EAC_fra = 0x800C6EAC; // type:asciz
RO_STR_800C6EE0_fra = 0x800C6EE0; // type:asciz
RO_STR_800C6F08_fra = 0x800C6F08; // type:asciz
RO_STR_800C6F3C_fra = 0x800C6F3C; // type:asciz
RO_STR_800C6F70_fra = 0x800C6F70; // type:asciz
RO_STR_800C6FAC_fra = 0x800C6FAC; // type:asciz
RO_STR_800C6FE0_fra = 0x800C6FE0; // type:asciz
RO_STR_800C7010_fra = 0x800C7010; // type:asciz
RO_STR_800C7050_fra = 0x800C7050; // type:asciz
RO_STR_800C7070_fra = 0x800C7070; // type:asciz
RO_STR_800C70BC_fra = 0x800C70BC; // type:asciz
RO_STR_800C70F8_fra = 0x800C70F8; // type:asciz
RO_STR_800C7138_fra = 0x800C7138; // type:asciz
RO_STR_800C7174_fra = 0x800C7174; // type:asciz
RO_STR_800C71AC_fra = 0x800C71AC; // type:asciz
RO_STR_800C71E4_fra = 0x800C71E4; // type:asciz
RO_STR_800C721C_fra = 0x800C721C; // type:asciz
RO_STR_800C7270_fra = 0x800C7270; // type:asciz
RO_STR_800C729C_fra = 0x800C729C; // type:asciz
RO_STR_800C72C8_fra = 0x800C72C8; // type:asciz
RO_STR_800C7304_fra = 0x800C7304; // type:asciz
RO_STR_800C7330_fra = 0x800C7330; // type:asciz
RO_STR_800C7368_fra = 0x800C7368; // type:asciz
RO_STR_800C7394_fra = 0x800C7394; // type:asciz
RO_STR_800C73D0_fra = 0x800C73D0; // type:asciz
RO_STR_800C740C_fra = 0x800C740C; // type:asciz
RO_STR_800C7448_fra = 0x800C7448; // type:asciz
RO_STR_800C747C_fra = 0x800C747C; // type:asciz
RO_STR_800C74B4_fra = 0x800C74B4; // type:asciz
RO_STR_800C74F4_fra = 0x800C74F4; // type:asciz
RO_STR_800C7528_fra = 0x800C7528; // type:asciz
RO_STR_800C7568_fra = 0x800C7568; // type:asciz
RO_STR_800C759C_fra = 0x800C759C; // type:asciz
RO_STR_800C75D0_fra = 0x800C75D0; // type:asciz
RO_STR_800C7604_fra = 0x800C7604; // type:asciz
RO_STR_800C7634_fra = 0x800C7634; // type:asciz
RO_STR_800C766C_fra = 0x800C766C; // type:asciz
RO_STR_800C76A0_fra = 0x800C76A0; // type:asciz
RO_STR_800C76D0_fra = 0x800C76D0; // type:asciz
RO_STR_800C770C_fra = 0x800C770C; // type:asciz
RO_STR_800C7748_fra = 0x800C7748; // type:asciz
RO_STR_800C7780_fra = 0x800C7780; // type:asciz
RO_STR_800C77BC_fra = 0x800C77BC; // type:asciz
RO_STR_800C77F8_fra = 0x800C77F8; // type:asciz
RO_STR_800C782C_fra = 0x800C782C; // type:asciz
RO_STR_800C7860_fra = 0x800C7860; // type:asciz
RO_STR_800C7898_fra = 0x800C7898; // type:asciz
RO_STR_800C78CC_fra = 0x800C78CC; // type:asciz
RO_STR_800C7908_fra = 0x800C7908; // type:asciz
RO_STR_800C7948_fra = 0x800C7948; // type:asciz
RO_STR_800C7980_fra = 0x800C7980; // type:asciz
RO_STR_800C79B8_fra = 0x800C79B8; // type:asciz
RO_STR_800C79F0_fra = 0x800C79F0; // type:asciz
RO_STR_800C7A28_fra = 0x800C7A28; // type:asciz
RO_STR_800C7A64_fra = 0x800C7A64; // type:asciz
RO_STR_800C7A9C_fra = 0x800C7A9C; // type:asciz
RO_STR_800C7AD8_fra = 0x800C7AD8; // type:asciz
RO_STR_800C7B0C_fra = 0x800C7B0C; // type:asciz
RO_STR_800C7B3C_fra = 0x800C7B3C; // type:asciz
RO_STR_800C7B68_fra = 0x800C7B68; // type:asciz
RO_STR_800C7BA0_fra = 0x800C7BA0; // type:asciz
RO_STR_800C7BCC_fra = 0x800C7BCC; // type:asciz
RO_STR_800C7BF4_fra = 0x800C7BF4; // type:asciz
RO_STR_800C7C30_fra = 0x800C7C30; // type:asciz
RO_STR_800C7C6C_fra = 0x800C7C6C; // type:asciz
RO_STR_800C7CA8_fra = 0x800C7CA8; // type:asciz
RO_STR_800C7CD8_fra = 0x800C7CD8; // type:asciz
RO_STR_800C7D0C_fra = 0x800C7D0C; // type:asciz
RO_STR_800C7D4C_fra = 0x800C7D4C; // type:asciz
RO_STR_800C7D80_fra = 0x800C7D80; // type:asciz
STR_800C94AC = 0x800C7DBC; // type:asciz
RO_800C94B0_usa = 0x800C7DC0; // type:u8
jtbl_800C94D0_usa = 0x800C7DE0; // type:jtbl
RO_800C94F4_usa = 0x800C7E04; //
STR_800C9520 = 0x800C7E30; // type:asciz
STR_800C9524 = 0x800C7E34; // type:asciz
__libm_qnan_f = 0x800C7E50; // type:f32
DBL_800C9558 = 0x800C7E68; // type:f64
DBL_800C9560 = 0x800C7E70; // type:f64
DBL_800C9568 = 0x800C7E78; // type:f64
DBL_800C9570 = 0x800C7E80; // type:f64
DBL_800C9578 = 0x800C7E88; // type:f64
DBL_800C9580 = 0x800C7E90; // type:f64
DBL_800C9588 = 0x800C7E98; // type:f64
FLT_800C9590 = 0x800C7EA0; // type:f32
DBL_800C9598 = 0x800C7EA8; // type:f64
DBL_800C95A0 = 0x800C7EB0; // type:f64
DBL_800C95A8 = 0x800C7EB8; // type:f64
DBL_800C95B0 = 0x800C7EC0; // type:f64
RO_800C95C0_usa = 0x800C7ED0; //
RO_800C95C8_usa = 0x800C7ED8; //
STR_800C95E0 = 0x800C7EF0; // type:asciz
jtbl_800C95E8_usa = 0x800C7EF8; // type:jtbl
RO_800C9738_usa = 0x800C8048; //
RO_800C973C_usa = 0x800C804C; //
RO_800C8058_fra = 0x800C8058; //
RO_800C805C_fra = 0x800C805C; //
RO_STR_800C8068_fra = 0x800C8068; // type:asciz
RO_STR_800C806C_fra = 0x800C806C; // type:asciz
DBL_800C9770 = 0x800C8080; // type:f64
STR_800C97B8 = 0x800C80C8; // type:asciz
STR_800C97BC = 0x800C80CC; // type:asciz
DBL_800C97C0 = 0x800C80D0; // type:f64
DBL_800C97C8 = 0x800C80D8; // type:f64
STR_800C97D0 = 0x800C80E0; // type:asciz
STR_800C97E0 = 0x800C80F0; // type:asciz
STR_800C97E8 = 0x800C80F8; // type:asciz
RO_800C8100_fra = 0x800C8100; //
RO_800C8104_fra = 0x800C8104; //
RO_STR_800C8110_fra = 0x800C8110; // type:asciz
RO_STR_800C8114_fra = 0x800C8114; // type:asciz
jtbl_800C9818_usa = 0x800C8128; // type:jtbl
RO_STR_800C8188_fra = 0x800C8188; // type:asciz


// .bss


piThread = 0x80190940; //

B_801949B0_usa = 0x80192110; //

B_801949D0_usa = 0x80192130; //

B_80194A20_usa = 0x80192180; //

B_80195C90_usa = 0x801933F0; //

B_80195CA0_usa = 0x80193400; //

B_80195CC0_usa = 0x80193420; //

B_80195CE0_usa = 0x80193440; //

B_80195D00_usa = 0x80193460; //

B_80199F10_usa = 0x80197670; //

B_80199F30_usa = 0x80197690; //

B_8019A3B0_usa = 0x80197B10; //

__osRdb_DbgRead_Buf = 0x8019A8B4; // size:0x4

__osBaseCounter = 0x801A8D78; // size:0x4

__kmc_pt_mode = 0x801A8D8C; // size:0x4
__osThreadSave = 0x801A8D90; //

__osProfileOverflowBin = 0x801A8F44; // size:0x4

__osContPifRam = 0x801A8F80; // size:0x40

__osRdb_IP6_CurWrite = 0x801A9000; // size:0x4

__Dom2SpeedParam = 0x801A9068; //

__osProfileList = 0x801A90DC; // size:0x4

__osViIntrCount = 0x801AB368; // size:0x4

__osRdb_Read_Data_Ct = 0x801C43EC; // size:0x4

__osRdb_IP6_Size = 0x801C45B0; // size:0x4

__osMaxControllers = 0x801C4620; // type:u8 size:0x1

__osCurrentTime = 0x801C4658; // size:0x8

__CartRomHandle = 0x801C4668; // type:s8 size:0x74

__osPiAccessQueue = 0x801C47F0; //

__Dom1SpeedParam = 0x801C4840; //

__rmonUtilityBuffer = 0x801C4988; // size:0x100

rmonRdbReadBuf = 0x801C4AE0; // size:0x800

__osContLastCmd = 0x801C52EA; // type:s8 size:0x1

__osEepromTimerMsg = 0x801F7360; // size:0x4

__osRdb_IP6_CurSend = 0x801F73C0; // size:0x4

__osTimerCounter = 0x801F73DC; // size:0x4

__osProfileListEnd = 0x801F819C; // size:0x4

__osProfTimerQ = 0x801F81A8; // size:0x18

__osRdb_Read_Data_Buf = 0x801F8478; // size:0x4

__osEventStateTab = 0x801F9090; // size:0xB8

__osRdb_IP6_Data = 0x801F9178; // size:0x4

__osEepromTimerQ = 0x801F91A0; // size:0x18

__rmonRcpAtBreak = 0x801F95E0; // type:u8 size:0x1

__rmonMQ = 0x801F95E8; // size:0x18
__osRdb_IP6_Ct = 0x801F9600; // size:0x4
